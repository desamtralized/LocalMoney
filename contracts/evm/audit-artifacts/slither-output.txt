'npx hardhat clean' running (wd: /Users/samb/workspace/desamtralized/local-money/contracts/evm)
'npx hardhat clean --global' running (wd: /Users/samb/workspace/desamtralized/local-money/contracts/evm)
'npx hardhat compile --force' running (wd: /Users/samb/workspace/desamtralized/local-money/contracts/evm)

Escrow.deposit(uint256,address,uint256,address) (contracts/Escrow.sol#108-132) uses arbitrary from in transferFrom: IERC20(tokenAddress).safeTransferFrom(depositor,address(this),amount) (contracts/Escrow.sol#124)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#arbitrary-from-in-transferfrom

TimelockController._execute(address,uint256,bytes) (node_modules/@openzeppelin/contracts/governance/TimelockController.sol#411-414) sends eth to arbitrary user
	Dangerous calls:
	- (success,returndata) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts/governance/TimelockController.sol#412)
Escrow._safeTransfer(address,address,uint256) (contracts/Escrow.sol#208-223) sends eth to arbitrary user
	Dangerous calls:
	- (success,None) = to.call{gas: 2300,value: amount}() (contracts/Escrow.sol#213)
	- (success,None) = to.call{value: amount}() (contracts/Escrow.sol#216)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

ArbitratorManager._assignArbitratorFallback(uint256,string) (contracts/ArbitratorManager.sol#197-243) uses a weak PRNG: "selectedIndex = uint256(seed) % activeCount (contracts/ArbitratorManager.sol#235)" 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#weak-PRNG

Math.mulDiv(uint256,uint256,uint256) (node_modules/@openzeppelin/contracts/utils/math/Math.sol#204-275) has bitwise-xor operator ^ instead of the exponentiation operator **: 
	 - inverse = (3 * denominator) ^ 2 (node_modules/@openzeppelin/contracts/utils/math/Math.sol#257)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-exponentiation

Reentrancy in Trade.fundEscrow(uint256) (contracts/Trade.sol#283-320):
	External calls:
	- escrowContract.deposit{value: msg.value}(_tradeId,address(0),msg.value,msg.sender) (contracts/Trade.sol#300)
	- escrowContract.deposit(_tradeId,trade.tokenAddress,trade.amount,address(this)) (contracts/Trade.sol#310)
	External calls sending eth:
	- escrowContract.deposit{value: msg.value}(_tradeId,address(0),msg.value,msg.sender) (contracts/Trade.sol#300)
	State variables written after the call(s):
	- trade.state = TradeState.EscrowFunded (contracts/Trade.sol#314)
	Trade.trades (contracts/Trade.sol#26) can be used in cross function reentrancies:
	- Trade.getTrade(uint256) (contracts/Trade.sol#625-628)
	- Trade.trades (contracts/Trade.sol#26)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

PriceOracle.tokenPrices (contracts/PriceOracle.sol#63) is never initialized. It is used in:
	- PriceOracle.getCachedTokenPrice(address) (contracts/PriceOracle.sol#257-269)
	- PriceOracle.isTokenPriceValid(address) (contracts/PriceOracle.sol#321-328)
	- PriceOracle.getTokenPriceAge(address) (contracts/PriceOracle.sol#335-341)
	- PriceOracle._getTokenPriceInUSD(address) (contracts/PriceOracle.sol#372-397)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-state-variables

Math.mulDiv(uint256,uint256,uint256) (node_modules/@openzeppelin/contracts/utils/math/Math.sol#204-275) performs a multiplication on the result of a division:
	- denominator = denominator / twos (node_modules/@openzeppelin/contracts/utils/math/Math.sol#242)
	- inverse = (3 * denominator) ^ 2 (node_modules/@openzeppelin/contracts/utils/math/Math.sol#257)
Math.mulDiv(uint256,uint256,uint256) (node_modules/@openzeppelin/contracts/utils/math/Math.sol#204-275) performs a multiplication on the result of a division:
	- denominator = denominator / twos (node_modules/@openzeppelin/contracts/utils/math/Math.sol#242)
	- inverse *= 2 - denominator * inverse (node_modules/@openzeppelin/contracts/utils/math/Math.sol#261)
Math.mulDiv(uint256,uint256,uint256) (node_modules/@openzeppelin/contracts/utils/math/Math.sol#204-275) performs a multiplication on the result of a division:
	- denominator = denominator / twos (node_modules/@openzeppelin/contracts/utils/math/Math.sol#242)
	- inverse *= 2 - denominator * inverse (node_modules/@openzeppelin/contracts/utils/math/Math.sol#262)
Math.mulDiv(uint256,uint256,uint256) (node_modules/@openzeppelin/contracts/utils/math/Math.sol#204-275) performs a multiplication on the result of a division:
	- denominator = denominator / twos (node_modules/@openzeppelin/contracts/utils/math/Math.sol#242)
	- inverse *= 2 - denominator * inverse (node_modules/@openzeppelin/contracts/utils/math/Math.sol#263)
Math.mulDiv(uint256,uint256,uint256) (node_modules/@openzeppelin/contracts/utils/math/Math.sol#204-275) performs a multiplication on the result of a division:
	- denominator = denominator / twos (node_modules/@openzeppelin/contracts/utils/math/Math.sol#242)
	- inverse *= 2 - denominator * inverse (node_modules/@openzeppelin/contracts/utils/math/Math.sol#264)
Math.mulDiv(uint256,uint256,uint256) (node_modules/@openzeppelin/contracts/utils/math/Math.sol#204-275) performs a multiplication on the result of a division:
	- denominator = denominator / twos (node_modules/@openzeppelin/contracts/utils/math/Math.sol#242)
	- inverse *= 2 - denominator * inverse (node_modules/@openzeppelin/contracts/utils/math/Math.sol#265)
Math.mulDiv(uint256,uint256,uint256) (node_modules/@openzeppelin/contracts/utils/math/Math.sol#204-275) performs a multiplication on the result of a division:
	- denominator = denominator / twos (node_modules/@openzeppelin/contracts/utils/math/Math.sol#242)
	- inverse *= 2 - denominator * inverse (node_modules/@openzeppelin/contracts/utils/math/Math.sol#266)
Math.mulDiv(uint256,uint256,uint256) (node_modules/@openzeppelin/contracts/utils/math/Math.sol#204-275) performs a multiplication on the result of a division:
	- low = low / twos (node_modules/@openzeppelin/contracts/utils/math/Math.sol#245)
	- result = low * inverse (node_modules/@openzeppelin/contracts/utils/math/Math.sol#272)
Math.invMod(uint256,uint256) (node_modules/@openzeppelin/contracts/utils/math/Math.sol#315-361) performs a multiplication on the result of a division:
	- quotient = gcd / remainder (node_modules/@openzeppelin/contracts/utils/math/Math.sol#337)
	- (gcd,remainder) = (remainder,gcd - remainder * quotient) (node_modules/@openzeppelin/contracts/utils/math/Math.sol#339-346)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply

TimelockController.getOperationState(bytes32) (node_modules/@openzeppelin/contracts/governance/TimelockController.sol#206-217) uses a dangerous strict equality:
	- timestamp == 0 (node_modules/@openzeppelin/contracts/governance/TimelockController.sol#208)
TimelockController.getOperationState(bytes32) (node_modules/@openzeppelin/contracts/governance/TimelockController.sol#206-217) uses a dangerous strict equality:
	- timestamp == _DONE_TIMESTAMP (node_modules/@openzeppelin/contracts/governance/TimelockController.sol#210)
Offer.getUserActiveOfferCount(address) (contracts/Offer.sol#71-82) uses a dangerous strict equality:
	- _offers[userOfferIds[i]].state == OfferState.Active (contracts/Offer.sol#76)
PriceOracle.getTokenPriceInFiat(address,string,uint256) (contracts/PriceOracle.sol#278-291) uses a dangerous strict equality:
	- fiatPriceUSD == 0 (contracts/PriceOracle.sol#286)
Profile.getReputationScore(address) (contracts/Profile.sol#274-283) uses a dangerous strict equality:
	- totalTrades == 0 (contracts/Profile.sol#278)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities

Reentrancy in Trade.disputeTrade(uint256,string) (contracts/Trade.sol#459-514):
	External calls:
	- assignedArbitrator = arbitratorManager.assignArbitrator(_tradeId,trade.fiatCurrency) (contracts/Trade.sol#508)
	State variables written after the call(s):
	- disputes[_tradeId].arbitrator = assignedArbitrator (contracts/Trade.sol#509)
	Trade.disputes (contracts/Trade.sol#37) can be used in cross function reentrancies:
	- Trade.disputes (contracts/Trade.sol#37)
	- Trade.getDisputeInfo(uint256) (contracts/Trade.sol#610-616)
	- trade.arbitrator = assignedArbitrator (contracts/Trade.sol#510)
	Trade.trades (contracts/Trade.sol#26) can be used in cross function reentrancies:
	- Trade.getTrade(uint256) (contracts/Trade.sol#625-628)
	- Trade.trades (contracts/Trade.sol#26)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1

TimelockController._execute(address,uint256,bytes) (node_modules/@openzeppelin/contracts/governance/TimelockController.sol#411-414) ignores return value by Address.verifyCallResult(success,returndata) (node_modules/@openzeppelin/contracts/governance/TimelockController.sol#413)
ERC1967Utils.upgradeToAndCall(address,bytes) (node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol#67-76) ignores return value by Address.functionDelegateCall(newImplementation,data) (node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol#72)
ERC1967Utils.upgradeBeaconToAndCall(address,bytes) (node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol#157-166) ignores return value by Address.functionDelegateCall(IBeacon(newBeacon).implementation(),data) (node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol#162)
Offer.createOffer(IOffer.OfferType,string,address,uint256,uint256,uint256,string) (contracts/Offer.sol#95-152) ignores return value by _activeOfferIds.add(offerId) (contracts/Offer.sol#139)
Offer._updateOfferIndexes(uint256,IOffer.OfferState,IOffer.OfferState) (contracts/Offer.sol#436-447) ignores return value by _activeOfferIds.remove(_offerId) (contracts/Offer.sol#442)
Offer._updateOfferIndexes(uint256,IOffer.OfferState,IOffer.OfferState) (contracts/Offer.sol#436-447) ignores return value by _activeOfferIds.add(_offerId) (contracts/Offer.sol#445)
PriceOracle._getChainlinkPrice(address) (contracts/PriceOracle.sol#404-424) ignores return value by (None,price,None,updatedAt,None) = priceFeed.latestRoundData() (contracts/PriceOracle.sol#407)
PriceOracle._getUniswapPrice(address,PriceOracle.PriceRoute) (contracts/PriceOracle.sol#432-474) ignores return value by (sqrtPriceX96) = IUniswapV3Pool(poolAddress).slot0() (contracts/PriceOracle.sol#454-473)
Trade.resolveDispute(uint256,address) (contracts/Trade.sol#553-603) ignores return value by escrowContract.release(_tradeId,trade.tokenAddress,_winner,dispute.arbitrator) (contracts/Trade.sol#588-593)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return

MockERC20.constructor(string,string,uint8).name (contracts/MockERC20.sol#15) shadows:
	- ERC20.name() (node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol#52-54) (function)
	- IERC20Metadata.name() (node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol#15) (function)
MockERC20.constructor(string,string,uint8).symbol (contracts/MockERC20.sol#16) shadows:
	- ERC20.symbol() (node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol#60-62) (function)
	- IERC20Metadata.symbol() (node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol#20) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing

TimelockController._execute(address,uint256,bytes) (node_modules/@openzeppelin/contracts/governance/TimelockController.sol#411-414) has external calls inside a loop: (success,returndata) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts/governance/TimelockController.sol#412)
	Calls stack containing the loop:
		TimelockController.executeBatch(address[],uint256[],bytes[],bytes32,bytes32)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop

Reentrancy in ArbitratorManager._requestRandomArbitrator(uint256,string) (contracts/ArbitratorManager.sol#250-289):
	External calls:
	- requestId = vrfCoordinator.requestRandomWords(vrfKeyHash,vrfSubscriptionId,vrfRequestConfirmations,vrfCallbackGasLimit,vrfNumWords) (contracts/ArbitratorManager.sol#269-275)
	State variables written after the call(s):
	- vrfRequests[requestId] = VRFRequest({tradeId:_tradeId,fiatCurrency:_fiatCurrency,requestedAt:block.timestamp,fulfilled:false}) (contracts/ArbitratorManager.sol#278-283)
Reentrancy in Trade.cancelTrade(uint256) (contracts/Trade.sol#386-418):
	External calls:
	- escrowContract.refund(_tradeId,trade.tokenAddress,trade.seller) (contracts/Trade.sol#403)
	- profileContract.updateActiveTrades(trade.buyer,- 1) (contracts/Trade.sol#408)
	- profileContract.updateActiveTrades(trade.seller,- 1) (contracts/Trade.sol#409)
	State variables written after the call(s):
	- _recordStateTransition(_tradeId,currentState,newState) (contracts/Trade.sol#412)
		- tradeHistory[_tradeId].push(StateTransitionRecord({fromState:_from,toState:_to,timestamp:block.timestamp,actor:msg.sender})) (contracts/Trade.sol#652-657)
Reentrancy in Trade.fundEscrow(uint256) (contracts/Trade.sol#283-320):
	External calls:
	- escrowContract.deposit{value: msg.value}(_tradeId,address(0),msg.value,msg.sender) (contracts/Trade.sol#300)
	- escrowContract.deposit(_tradeId,trade.tokenAddress,trade.amount,address(this)) (contracts/Trade.sol#310)
	External calls sending eth:
	- escrowContract.deposit{value: msg.value}(_tradeId,address(0),msg.value,msg.sender) (contracts/Trade.sol#300)
	State variables written after the call(s):
	- _recordStateTransition(_tradeId,TradeState.RequestAccepted,TradeState.EscrowFunded) (contracts/Trade.sol#317)
		- tradeHistory[_tradeId].push(StateTransitionRecord({fromState:_from,toState:_to,timestamp:block.timestamp,actor:msg.sender})) (contracts/Trade.sol#652-657)
Reentrancy in Trade.refundExpiredTrade(uint256) (contracts/Trade.sol#424-450):
	External calls:
	- escrowContract.refund(_tradeId,trade.tokenAddress,trade.seller) (contracts/Trade.sol#439)
	- profileContract.updateActiveTrades(trade.buyer,- 1) (contracts/Trade.sol#442)
	- profileContract.updateActiveTrades(trade.seller,- 1) (contracts/Trade.sol#443)
	State variables written after the call(s):
	- _recordStateTransition(_tradeId,TradeState.EscrowFunded,TradeState.EscrowRefunded) (contracts/Trade.sol#446)
		- tradeHistory[_tradeId].push(StateTransitionRecord({fromState:_from,toState:_to,timestamp:block.timestamp,actor:msg.sender})) (contracts/Trade.sol#652-657)
Reentrancy in Trade.releaseEscrow(uint256) (contracts/Trade.sol#350-380):
	External calls:
	- netAmount = escrowContract.release(_tradeId,trade.tokenAddress,trade.buyer,address(0)) (contracts/Trade.sol#363-368)
	- profileContract.updateActiveTrades(trade.buyer,- 1) (contracts/Trade.sol#371)
	- profileContract.updateActiveTrades(trade.seller,- 1) (contracts/Trade.sol#372)
	- profileContract.updateTradeCount(trade.buyer,true) (contracts/Trade.sol#373)
	- profileContract.updateTradeCount(trade.seller,true) (contracts/Trade.sol#374)
	State variables written after the call(s):
	- _recordStateTransition(_tradeId,TradeState.FiatDeposited,TradeState.EscrowReleased) (contracts/Trade.sol#377)
		- tradeHistory[_tradeId].push(StateTransitionRecord({fromState:_from,toState:_to,timestamp:block.timestamp,actor:msg.sender})) (contracts/Trade.sol#652-657)
Reentrancy in Trade.resolveDispute(uint256,address) (contracts/Trade.sol#553-603):
	External calls:
	- arbitratorManager.updateArbitratorReputation(dispute.arbitrator,true) (contracts/Trade.sol#582)
	State variables written after the call(s):
	- _recordStateTransition(_tradeId,TradeState.EscrowDisputed,TradeState.DisputeResolved) (contracts/Trade.sol#585)
		- tradeHistory[_tradeId].push(StateTransitionRecord({fromState:_from,toState:_to,timestamp:block.timestamp,actor:msg.sender})) (contracts/Trade.sol#652-657)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

Reentrancy in ArbitratorManager._requestRandomArbitrator(uint256,string) (contracts/ArbitratorManager.sol#250-289):
	External calls:
	- requestId = vrfCoordinator.requestRandomWords(vrfKeyHash,vrfSubscriptionId,vrfRequestConfirmations,vrfCallbackGasLimit,vrfNumWords) (contracts/ArbitratorManager.sol#269-275)
	Event emitted after the call(s):
	- VRFRandomnessRequested(requestId,_tradeId,_fiatCurrency) (contracts/ArbitratorManager.sol#285)
Reentrancy in Offer.archiveOffer(uint256) (contracts/Offer.sol#261-282):
	External calls:
	- profile.updateActiveOffers(msg.sender,- 1) (contracts/Offer.sol#277)
	Event emitted after the call(s):
	- OfferArchived(_offerId,msg.sender) (contracts/Offer.sol#280)
	- OfferStateChanged(_offerId,oldState,OfferState.Archived) (contracts/Offer.sol#281)
Reentrancy in TimelockController.execute(address,uint256,bytes,bytes32,bytes32) (node_modules/@openzeppelin/contracts/governance/TimelockController.sol#357-370):
	External calls:
	- _execute(target,value,payload) (node_modules/@openzeppelin/contracts/governance/TimelockController.sol#367)
		- (success,returndata) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts/governance/TimelockController.sol#412)
	Event emitted after the call(s):
	- CallExecuted(id,0,target,value,payload) (node_modules/@openzeppelin/contracts/governance/TimelockController.sol#368)
Reentrancy in TimelockController.executeBatch(address[],uint256[],bytes[],bytes32,bytes32) (node_modules/@openzeppelin/contracts/governance/TimelockController.sol#384-406):
	External calls:
	- _execute(target,value,payload) (node_modules/@openzeppelin/contracts/governance/TimelockController.sol#402)
		- (success,returndata) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts/governance/TimelockController.sol#412)
	Event emitted after the call(s):
	- CallExecuted(id,i,target,value,payload) (node_modules/@openzeppelin/contracts/governance/TimelockController.sol#403)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

Escrow._safeTransfer(address,address,uint256) (contracts/Escrow.sol#208-223) tries to limit the gas of an external call that controls implicit decoding
	(success,None) = to.call{gas: 2300,value: amount}() (contracts/Escrow.sol#213)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#return-bomb

TimelockController.getOperationState(bytes32) (node_modules/@openzeppelin/contracts/governance/TimelockController.sol#206-217) uses timestamp for comparisons
	Dangerous comparisons:
	- timestamp == 0 (node_modules/@openzeppelin/contracts/governance/TimelockController.sol#208)
	- timestamp == _DONE_TIMESTAMP (node_modules/@openzeppelin/contracts/governance/TimelockController.sol#210)
	- timestamp > block.timestamp (node_modules/@openzeppelin/contracts/governance/TimelockController.sol#212)
ArbitratorManager.isActiveArbitrator(address) (contracts/ArbitratorManager.sol#458-465) uses timestamp for comparisons
	Dangerous comparisons:
	- arbitratorInfo[_arbitrator].isActive && arbitratorInfo[_arbitrator].joinedAt > 0 (contracts/ArbitratorManager.sol#464)
Escrow.performSwapAndBurn(address,uint256,address,address,uint256) (contracts/Escrow.sol#318-359) uses timestamp for comparisons
	Dangerous comparisons:
	- amountOut < minAmountOut (contracts/Escrow.sol#349)
Escrow.emergencyWithdraw(uint256,address,address,uint256) (contracts/Escrow.sol#452-482) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp >= emergencyWithdrawalTimelock[withdrawalKey],Timelock not expired) (contracts/Escrow.sol#466)
Offer.getUserActiveOfferCount(address) (contracts/Offer.sol#71-82) uses timestamp for comparisons
	Dangerous comparisons:
	- _offers[userOfferIds[i]].state == OfferState.Active (contracts/Offer.sol#76)
Offer._offerExists(uint256) (contracts/Offer.sol#411-413) uses timestamp for comparisons
	Dangerous comparisons:
	- _offerId > 0 && _offerId < nextOfferId && _offers[_offerId].owner != address(0) (contracts/Offer.sol#412)
PriceOracle.getCachedTokenPrice(address) (contracts/PriceOracle.sol#257-269) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp > cachedPrice.updatedAt + MAX_PRICE_AGE (contracts/PriceOracle.sol#265)
PriceOracle.getTokenPriceInFiat(address,string,uint256) (contracts/PriceOracle.sol#278-291) uses timestamp for comparisons
	Dangerous comparisons:
	- fiatPriceUSD == 0 (contracts/PriceOracle.sol#286)
PriceOracle.getFiatPrice(string) (contracts/PriceOracle.sol#298-314) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp > priceData.updatedAt + MAX_PRICE_AGE (contracts/PriceOracle.sol#309)
PriceOracle.isTokenPriceValid(address) (contracts/PriceOracle.sol#321-328) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp > priceData.updatedAt + MAX_PRICE_AGE (contracts/PriceOracle.sol#325)
PriceOracle.getTokenPriceAge(address) (contracts/PriceOracle.sol#335-341) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp > priceData.updatedAt (contracts/PriceOracle.sol#339-340)
PriceOracle._getTokenPriceInUSD(address) (contracts/PriceOracle.sol#372-397) uses timestamp for comparisons
	Dangerous comparisons:
	- cachedPrice.isValid && block.timestamp <= cachedPrice.updatedAt + MAX_PRICE_AGE (contracts/PriceOracle.sol#375-376)
PriceOracle._getChainlinkPrice(address) (contracts/PriceOracle.sol#404-424) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp > updatedAt + MAX_PRICE_AGE (contracts/PriceOracle.sol#410)
PriceOracle.isPriceValid(string) (contracts/PriceOracle.sol#548-555) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp > priceData.updatedAt + MAX_PRICE_AGE (contracts/PriceOracle.sol#552)
PriceOracle.getPriceAge(string) (contracts/PriceOracle.sol#557-563) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp > priceData.updatedAt (contracts/PriceOracle.sol#561-562)
Profile.profileExists(address) (contracts/Profile.sol#242-244) uses timestamp for comparisons
	Dangerous comparisons:
	- _profiles[_user].createdAt > 0 (contracts/Profile.sol#243)
Profile.getReputationScore(address) (contracts/Profile.sol#274-283) uses timestamp for comparisons
	Dangerous comparisons:
	- totalTrades == 0 (contracts/Profile.sol#278)
Profile.canCreateOffer(address) (contracts/Profile.sol#290-295) uses timestamp for comparisons
	Dangerous comparisons:
	- profile.activeOffers < config.maxActiveOffers (contracts/Profile.sol#294)
Profile.canCreateTrade(address) (contracts/Profile.sol#302-307) uses timestamp for comparisons
	Dangerous comparisons:
	- profile.activeTrades < config.maxActiveTrades (contracts/Profile.sol#306)
Trade.refundExpiredTrade(uint256) (contracts/Trade.sol#424-450) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp <= trade.expiresAt (contracts/Trade.sol#431)
Trade.disputeTrade(uint256,string) (contracts/Trade.sol#459-514) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp > trade.disputeDeadline (contracts/Trade.sol#483)
TradeUtils.isExpired(uint256) (contracts/libraries/TradeUtils.sol#75-77) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp > expiresAt (contracts/libraries/TradeUtils.sol#76)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

AccessControlUpgradeable._getAccessControlStorage() (node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol#68-72) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol#69-71)
Initializable._getInitializableStorage() (node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol#232-237) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol#234-236)
ReentrancyGuardUpgradeable._getReentrancyGuardStorage() (node_modules/@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol#49-53) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol#50-52)
SafeERC20._callOptionalReturn(IERC20,bytes) (node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#173-191) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#176-186)
SafeERC20._callOptionalReturnBool(IERC20,bytes) (node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#201-211) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#205-209)
Address._revert(bytes) (node_modules/@openzeppelin/contracts/utils/Address.sol#138-148) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/Address.sol#142-144)
Arrays._begin(uint256[]) (node_modules/@openzeppelin/contracts/utils/Arrays.sol#142-146) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/Arrays.sol#143-145)
Arrays._mload(uint256) (node_modules/@openzeppelin/contracts/utils/Arrays.sol#161-165) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/Arrays.sol#162-164)
Arrays._swap(uint256,uint256) (node_modules/@openzeppelin/contracts/utils/Arrays.sol#170-177) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/Arrays.sol#171-176)
Arrays._castToUint256Array(address[]) (node_modules/@openzeppelin/contracts/utils/Arrays.sol#180-184) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/Arrays.sol#181-183)
Arrays._castToUint256Array(bytes32[]) (node_modules/@openzeppelin/contracts/utils/Arrays.sol#187-191) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/Arrays.sol#188-190)
Arrays._castToUint256Comp(function(address,address) returns(bool)) (node_modules/@openzeppelin/contracts/utils/Arrays.sol#194-200) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/Arrays.sol#197-199)
Arrays._castToUint256Comp(function(bytes32,bytes32) returns(bool)) (node_modules/@openzeppelin/contracts/utils/Arrays.sol#203-209) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/Arrays.sol#206-208)
Arrays.unsafeAccess(address[],uint256) (node_modules/@openzeppelin/contracts/utils/Arrays.sol#383-389) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/Arrays.sol#385-387)
Arrays.unsafeAccess(bytes32[],uint256) (node_modules/@openzeppelin/contracts/utils/Arrays.sol#396-402) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/Arrays.sol#398-400)
Arrays.unsafeAccess(uint256[],uint256) (node_modules/@openzeppelin/contracts/utils/Arrays.sol#409-415) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/Arrays.sol#411-413)
Arrays.unsafeAccess(bytes[],uint256) (node_modules/@openzeppelin/contracts/utils/Arrays.sol#422-428) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/Arrays.sol#424-426)
Arrays.unsafeAccess(string[],uint256) (node_modules/@openzeppelin/contracts/utils/Arrays.sol#435-441) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/Arrays.sol#437-439)
Arrays.unsafeMemoryAccess(address[],uint256) (node_modules/@openzeppelin/contracts/utils/Arrays.sol#448-452) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/Arrays.sol#449-451)
Arrays.unsafeMemoryAccess(bytes32[],uint256) (node_modules/@openzeppelin/contracts/utils/Arrays.sol#459-463) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/Arrays.sol#460-462)
Arrays.unsafeMemoryAccess(uint256[],uint256) (node_modules/@openzeppelin/contracts/utils/Arrays.sol#470-474) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/Arrays.sol#471-473)
Arrays.unsafeMemoryAccess(bytes[],uint256) (node_modules/@openzeppelin/contracts/utils/Arrays.sol#481-485) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/Arrays.sol#482-484)
Arrays.unsafeMemoryAccess(string[],uint256) (node_modules/@openzeppelin/contracts/utils/Arrays.sol#492-496) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/Arrays.sol#493-495)
Arrays.unsafeSetLength(address[],uint256) (node_modules/@openzeppelin/contracts/utils/Arrays.sol#503-507) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/Arrays.sol#504-506)
Arrays.unsafeSetLength(bytes32[],uint256) (node_modules/@openzeppelin/contracts/utils/Arrays.sol#514-518) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/Arrays.sol#515-517)
Arrays.unsafeSetLength(uint256[],uint256) (node_modules/@openzeppelin/contracts/utils/Arrays.sol#525-529) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/Arrays.sol#526-528)
Arrays.unsafeSetLength(bytes[],uint256) (node_modules/@openzeppelin/contracts/utils/Arrays.sol#536-540) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/Arrays.sol#537-539)
Arrays.unsafeSetLength(string[],uint256) (node_modules/@openzeppelin/contracts/utils/Arrays.sol#547-551) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/Arrays.sol#548-550)
Panic.panic(uint256) (node_modules/@openzeppelin/contracts/utils/Panic.sol#50-56) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/Panic.sol#51-55)
SlotDerivation.erc7201Slot(string) (node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#45-50) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#46-49)
SlotDerivation.deriveArray(bytes32) (node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#64-69) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#65-68)
SlotDerivation.deriveMapping(bytes32,address) (node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#74-80) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#75-79)
SlotDerivation.deriveMapping(bytes32,bool) (node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#85-91) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#86-90)
SlotDerivation.deriveMapping(bytes32,bytes32) (node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#96-102) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#97-101)
SlotDerivation.deriveMapping(bytes32,uint256) (node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#107-113) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#108-112)
SlotDerivation.deriveMapping(bytes32,int256) (node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#118-124) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#119-123)
SlotDerivation.deriveMapping(bytes32,string) (node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#129-139) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#130-138)
SlotDerivation.deriveMapping(bytes32,bytes) (node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#144-154) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#145-153)
StorageSlot.getAddressSlot(bytes32) (node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#66-70) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#67-69)
StorageSlot.getBooleanSlot(bytes32) (node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#75-79) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#76-78)
StorageSlot.getBytes32Slot(bytes32) (node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#84-88) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#85-87)
StorageSlot.getUint256Slot(bytes32) (node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#93-97) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#94-96)
StorageSlot.getInt256Slot(bytes32) (node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#102-106) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#103-105)
StorageSlot.getStringSlot(bytes32) (node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#111-115) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#112-114)
StorageSlot.getStringSlot(string) (node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#120-124) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#121-123)
StorageSlot.getBytesSlot(bytes32) (node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#129-133) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#130-132)
StorageSlot.getBytesSlot(bytes) (node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#138-142) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#139-141)
Math.add512(uint256,uint256) (node_modules/@openzeppelin/contracts/utils/math/Math.sol#25-30) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/math/Math.sol#26-29)
Math.mul512(uint256,uint256) (node_modules/@openzeppelin/contracts/utils/math/Math.sol#37-46) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/math/Math.sol#41-45)
Math.tryMul(uint256,uint256) (node_modules/@openzeppelin/contracts/utils/math/Math.sol#73-84) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/math/Math.sol#76-80)
Math.tryDiv(uint256,uint256) (node_modules/@openzeppelin/contracts/utils/math/Math.sol#89-97) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/math/Math.sol#92-95)
Math.tryMod(uint256,uint256) (node_modules/@openzeppelin/contracts/utils/math/Math.sol#102-110) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/math/Math.sol#105-108)
Math.mulDiv(uint256,uint256,uint256) (node_modules/@openzeppelin/contracts/utils/math/Math.sol#204-275) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/math/Math.sol#227-234)
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/math/Math.sol#240-249)
Math.tryModExp(uint256,uint256,uint256) (node_modules/@openzeppelin/contracts/utils/math/Math.sol#409-433) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/math/Math.sol#411-432)
Math.tryModExp(bytes,bytes,bytes) (node_modules/@openzeppelin/contracts/utils/math/Math.sol#449-471) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/math/Math.sol#461-470)
Math.log2(uint256) (node_modules/@openzeppelin/contracts/utils/math/Math.sol#612-651) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/math/Math.sol#648-650)
SafeCast.toUint(bool) (node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol#1157-1161) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol#1158-1160)
EnumerableSet.values(EnumerableSet.Bytes32Set) (node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol#275-284) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol#279-281)
EnumerableSet.values(EnumerableSet.Bytes32Set,uint256,uint256) (node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol#294-303) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol#298-300)
EnumerableSet.values(EnumerableSet.AddressSet) (node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol#377-386) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol#381-383)
EnumerableSet.values(EnumerableSet.AddressSet,uint256,uint256) (node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol#396-405) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol#400-402)
EnumerableSet.values(EnumerableSet.UintSet) (node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol#479-488) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol#483-485)
EnumerableSet.values(EnumerableSet.UintSet,uint256,uint256) (node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol#498-507) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol#502-504)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage

11 different versions of Solidity are used:
	- Version constraint ^0.8.0 is used by:
		-^0.8.0 (node_modules/@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol#2)
		-^0.8.0 (node_modules/@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol#2)
	- Version constraint ^0.8.20 is used by:
		-^0.8.20 (node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol#4)
		-^0.8.20 (node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol#4)
		-^0.8.20 (node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol#4)
		-^0.8.20 (node_modules/@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol#4)
		-^0.8.20 (node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol#4)
		-^0.8.20 (node_modules/@openzeppelin/contracts/access/AccessControl.sol#4)
		-^0.8.20 (node_modules/@openzeppelin/contracts/governance/TimelockController.sol#4)
		-^0.8.20 (node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol#4)
		-^0.8.20 (node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol#4)
		-^0.8.20 (node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#4)
		-^0.8.20 (node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol#4)
		-^0.8.20 (node_modules/@openzeppelin/contracts/utils/Address.sol#4)
		-^0.8.20 (node_modules/@openzeppelin/contracts/utils/Arrays.sol#5)
		-^0.8.20 (node_modules/@openzeppelin/contracts/utils/Comparators.sol#4)
		-^0.8.20 (node_modules/@openzeppelin/contracts/utils/Context.sol#4)
		-^0.8.20 (node_modules/@openzeppelin/contracts/utils/Errors.sol#4)
		-^0.8.20 (node_modules/@openzeppelin/contracts/utils/Panic.sol#4)
		-^0.8.20 (node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#5)
		-^0.8.20 (node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#5)
		-^0.8.20 (node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol#4)
		-^0.8.20 (node_modules/@openzeppelin/contracts/utils/math/Math.sol#4)
		-^0.8.20 (node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol#5)
		-^0.8.20 (node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol#5)
	- Version constraint ^0.8.22 is used by:
		-^0.8.22 (node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol#4)
	- Version constraint >=0.8.4 is used by:
		->=0.8.4 (node_modules/@openzeppelin/contracts/access/IAccessControl.sol#4)
		->=0.8.4 (node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol#3)
	- Version constraint >=0.6.2 is used by:
		->=0.6.2 (node_modules/@openzeppelin/contracts/interfaces/IERC1363.sol#4)
		->=0.6.2 (node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol#4)
		->=0.6.2 (node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol#4)
	- Version constraint >=0.4.16 is used by:
		->=0.4.16 (node_modules/@openzeppelin/contracts/interfaces/IERC165.sol#4)
		->=0.4.16 (node_modules/@openzeppelin/contracts/interfaces/IERC20.sol#4)
		->=0.4.16 (node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol#4)
		->=0.4.16 (node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol#4)
		->=0.4.16 (node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol#4)
		->=0.4.16 (node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol#4)
	- Version constraint >=0.4.11 is used by:
		->=0.4.11 (node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol#4)
	- Version constraint ^0.8.21 is used by:
		-^0.8.21 (node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol#4)
	- Version constraint >=0.5.0 is used by:
		->=0.5.0 (node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol#4)
		->=0.5.0 (node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol#2)
		->=0.5.0 (node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol#2)
		->=0.5.0 (node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol#2)
		->=0.5.0 (node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol#2)
		->=0.5.0 (node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol#2)
		->=0.5.0 (node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol#2)
		->=0.5.0 (node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol#2)
		->=0.5.0 (node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol#2)
	- Version constraint >=0.7.5 is used by:
		->=0.7.5 (node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol#2)
	- Version constraint ^0.8.24 is used by:
		-^0.8.24 (contracts/ArbitratorManager.sol#2)
		-^0.8.24 (contracts/Escrow.sol#2)
		-^0.8.24 (contracts/Hub.sol#2)
		-^0.8.24 (contracts/MockERC20.sol#2)
		-^0.8.24 (contracts/Offer.sol#2)
		-^0.8.24 (contracts/PriceOracle.sol#2)
		-^0.8.24 (contracts/Profile.sol#2)
		-^0.8.24 (contracts/Trade.sol#2)
		-^0.8.24 (contracts/interfaces/IArbitratorManager.sol#2)
		-^0.8.24 (contracts/interfaces/IEscrow.sol#2)
		-^0.8.24 (contracts/interfaces/IHub.sol#2)
		-^0.8.24 (contracts/interfaces/ILocalToken.sol#2)
		-^0.8.24 (contracts/interfaces/IOffer.sol#2)
		-^0.8.24 (contracts/interfaces/IPriceOracle.sol#2)
		-^0.8.24 (contracts/interfaces/IProfile.sol#2)
		-^0.8.24 (contracts/interfaces/ITimelockController.sol#2)
		-^0.8.24 (contracts/interfaces/ITrade.sol#2)
		-^0.8.24 (contracts/libraries/FeeCalculations.sol#2)
		-^0.8.24 (contracts/libraries/TradeUtils.sol#2)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used

Offer._updateOfferInternal(uint256,IOffer.OfferState,uint256,uint256,uint256) (contracts/Offer.sol#180-239) has a high cyclomatic complexity (12).
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#cyclomatic-complexity

Version constraint ^0.8.0 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- DataLocationChangeInInternalOverride
	- NestedCalldataArrayAbiReencodingSizeValidation
	- SignedImmutables
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching.
It is used by:
	- ^0.8.0 (node_modules/@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol#2)
	- ^0.8.0 (node_modules/@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol#2)
Version constraint ^0.8.20 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- VerbatimInvalidDeduplication
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess.
It is used by:
	- ^0.8.20 (node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol#4)
	- ^0.8.20 (node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol#4)
	- ^0.8.20 (node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol#4)
	- ^0.8.20 (node_modules/@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol#4)
	- ^0.8.20 (node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol#4)
	- ^0.8.20 (node_modules/@openzeppelin/contracts/access/AccessControl.sol#4)
	- ^0.8.20 (node_modules/@openzeppelin/contracts/governance/TimelockController.sol#4)
	- ^0.8.20 (node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol#4)
	- ^0.8.20 (node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol#4)
	- ^0.8.20 (node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#4)
	- ^0.8.20 (node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol#4)
	- ^0.8.20 (node_modules/@openzeppelin/contracts/utils/Address.sol#4)
	- ^0.8.20 (node_modules/@openzeppelin/contracts/utils/Arrays.sol#5)
	- ^0.8.20 (node_modules/@openzeppelin/contracts/utils/Comparators.sol#4)
	- ^0.8.20 (node_modules/@openzeppelin/contracts/utils/Context.sol#4)
	- ^0.8.20 (node_modules/@openzeppelin/contracts/utils/Errors.sol#4)
	- ^0.8.20 (node_modules/@openzeppelin/contracts/utils/Panic.sol#4)
	- ^0.8.20 (node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#5)
	- ^0.8.20 (node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#5)
	- ^0.8.20 (node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol#4)
	- ^0.8.20 (node_modules/@openzeppelin/contracts/utils/math/Math.sol#4)
	- ^0.8.20 (node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol#5)
	- ^0.8.20 (node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol#5)
Version constraint ^0.8.22 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- VerbatimInvalidDeduplication.
It is used by:
	- ^0.8.22 (node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol#4)
Version constraint >=0.8.4 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- DataLocationChangeInInternalOverride
	- NestedCalldataArrayAbiReencodingSizeValidation
	- SignedImmutables.
It is used by:
	- >=0.8.4 (node_modules/@openzeppelin/contracts/access/IAccessControl.sol#4)
	- >=0.8.4 (node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol#3)
Version constraint >=0.6.2 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- NestedCalldataArrayAbiReencodingSizeValidation
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- MissingEscapingInFormatting
	- ArraySliceDynamicallyEncodedBaseType
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow.
It is used by:
	- >=0.6.2 (node_modules/@openzeppelin/contracts/interfaces/IERC1363.sol#4)
	- >=0.6.2 (node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol#4)
	- >=0.6.2 (node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol#4)
Version constraint >=0.4.16 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- ABIEncoderV2StorageArrayWithMultiSlotElement
	- DynamicConstructorArgumentsClippedABIV2
	- UninitializedFunctionPointerInConstructor_0.4.x
	- IncorrectEventSignatureInLibraries_0.4.x
	- ExpExponentCleanup
	- NestedArrayFunctionCallDecoder
	- ZeroFunctionSelector.
It is used by:
	- >=0.4.16 (node_modules/@openzeppelin/contracts/interfaces/IERC165.sol#4)
	- >=0.4.16 (node_modules/@openzeppelin/contracts/interfaces/IERC20.sol#4)
	- >=0.4.16 (node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol#4)
	- >=0.4.16 (node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol#4)
	- >=0.4.16 (node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol#4)
	- >=0.4.16 (node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol#4)
Version constraint >=0.4.11 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- UninitializedFunctionPointerInConstructor_0.4.x
	- IncorrectEventSignatureInLibraries_0.4.x
	- ExpExponentCleanup
	- NestedArrayFunctionCallDecoder
	- ZeroFunctionSelector
	- DelegateCallReturnValue
	- ECRecoverMalformedInput
	- SkipEmptyStringLiteral.
It is used by:
	- >=0.4.11 (node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol#4)
Version constraint ^0.8.21 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- VerbatimInvalidDeduplication.
It is used by:
	- ^0.8.21 (node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol#4)
Version constraint >=0.5.0 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- ABIEncoderV2StorageArrayWithMultiSlotElement
	- DynamicConstructorArgumentsClippedABIV2
	- UninitializedFunctionPointerInConstructor
	- IncorrectEventSignatureInLibraries
	- ABIEncoderV2PackedStorage.
It is used by:
	- >=0.5.0 (node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol#4)
	- >=0.5.0 (node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol#2)
	- >=0.5.0 (node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol#2)
	- >=0.5.0 (node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol#2)
	- >=0.5.0 (node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol#2)
	- >=0.5.0 (node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol#2)
	- >=0.5.0 (node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol#2)
	- >=0.5.0 (node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol#2)
	- >=0.5.0 (node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol#2)
Version constraint >=0.7.5 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- DataLocationChangeInInternalOverride
	- NestedCalldataArrayAbiReencodingSizeValidation
	- SignedImmutables
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching.
It is used by:
	- >=0.7.5 (node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol#2)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in TimelockController._execute(address,uint256,bytes) (node_modules/@openzeppelin/contracts/governance/TimelockController.sol#411-414):
	- (success,returndata) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts/governance/TimelockController.sol#412)
Low level call in Address.sendValue(address,uint256) (node_modules/@openzeppelin/contracts/utils/Address.sol#33-42):
	- (success,returndata) = recipient.call{value: amount}() (node_modules/@openzeppelin/contracts/utils/Address.sol#38)
Low level call in Address.functionCallWithValue(address,bytes,uint256) (node_modules/@openzeppelin/contracts/utils/Address.sol#75-81):
	- (success,returndata) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts/utils/Address.sol#79)
Low level call in Address.functionStaticCall(address,bytes) (node_modules/@openzeppelin/contracts/utils/Address.sol#87-90):
	- (success,returndata) = target.staticcall(data) (node_modules/@openzeppelin/contracts/utils/Address.sol#88)
Low level call in Address.functionDelegateCall(address,bytes) (node_modules/@openzeppelin/contracts/utils/Address.sol#96-99):
	- (success,returndata) = target.delegatecall(data) (node_modules/@openzeppelin/contracts/utils/Address.sol#97)
Low level call in Escrow._safeTransfer(address,address,uint256) (contracts/Escrow.sol#208-223):
	- (success,None) = to.call{gas: 2300,value: amount}() (contracts/Escrow.sol#213)
	- (success,None) = to.call{value: amount}() (contracts/Escrow.sol#216)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

TimelockController (node_modules/@openzeppelin/contracts/governance/TimelockController.sol#25-471) should inherit from ITimelockController (contracts/interfaces/ITimelockController.sol#10-113)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-inheritance

Function AccessControlUpgradeable.__AccessControl_init() (node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol#83-84) is not in mixedCase
Function AccessControlUpgradeable.__AccessControl_init_unchained() (node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol#86-87) is not in mixedCase
Constant AccessControlUpgradeable.AccessControlStorageLocation (node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol#66) is not in UPPER_CASE_WITH_UNDERSCORES
Function UUPSUpgradeable.__UUPSUpgradeable_init() (node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol#65-66) is not in mixedCase
Function UUPSUpgradeable.__UUPSUpgradeable_init_unchained() (node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol#68-69) is not in mixedCase
Variable UUPSUpgradeable.__self (node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol#22) is not in mixedCase
Function ContextUpgradeable.__Context_init() (node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol#18-19) is not in mixedCase
Function ContextUpgradeable.__Context_init_unchained() (node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol#21-22) is not in mixedCase
Function ReentrancyGuardUpgradeable.__ReentrancyGuard_init() (node_modules/@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol#60-62) is not in mixedCase
Function ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained() (node_modules/@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol#64-67) is not in mixedCase
Constant ReentrancyGuardUpgradeable.ReentrancyGuardStorageLocation (node_modules/@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol#47) is not in UPPER_CASE_WITH_UNDERSCORES
Function ERC165Upgradeable.__ERC165_init() (node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol#22-23) is not in mixedCase
Function ERC165Upgradeable.__ERC165_init_unchained() (node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol#25-26) is not in mixedCase
Parameter ArbitratorManager.initialize(address,address)._hub (contracts/ArbitratorManager.sol#59) is not in mixedCase
Parameter ArbitratorManager.initialize(address,address)._tradeContract (contracts/ArbitratorManager.sol#60) is not in mixedCase
Parameter ArbitratorManager.registerArbitrator(string[],string)._supportedCurrencies (contracts/ArbitratorManager.sol#83) is not in mixedCase
Parameter ArbitratorManager.registerArbitrator(string[],string)._encryptionKey (contracts/ArbitratorManager.sol#84) is not in mixedCase
Parameter ArbitratorManager.removeArbitratorFromCurrency(address,string)._arbitrator (contracts/ArbitratorManager.sol#122) is not in mixedCase
Parameter ArbitratorManager.removeArbitratorFromCurrency(address,string)._currency (contracts/ArbitratorManager.sol#123) is not in mixedCase
Parameter ArbitratorManager.deactivateArbitrator(address)._arbitrator (contracts/ArbitratorManager.sol#159) is not in mixedCase
Parameter ArbitratorManager.assignArbitrator(uint256,string)._tradeId (contracts/ArbitratorManager.sol#179) is not in mixedCase
Parameter ArbitratorManager.assignArbitrator(uint256,string)._fiatCurrency (contracts/ArbitratorManager.sol#180) is not in mixedCase
Parameter ArbitratorManager.rawFulfillRandomWords(uint256,uint256[])._requestId (contracts/ArbitratorManager.sol#297) is not in mixedCase
Parameter ArbitratorManager.rawFulfillRandomWords(uint256,uint256[])._randomWords (contracts/ArbitratorManager.sol#298) is not in mixedCase
Parameter ArbitratorManager.updateArbitratorReputation(address,bool)._arbitrator (contracts/ArbitratorManager.sol#359) is not in mixedCase
Parameter ArbitratorManager.updateArbitratorReputation(address,bool)._won (contracts/ArbitratorManager.sol#360) is not in mixedCase
Parameter ArbitratorManager.configureVRF(address,uint64,bytes32,uint32,uint16)._vrfCoordinator (contracts/ArbitratorManager.sol#391) is not in mixedCase
Parameter ArbitratorManager.configureVRF(address,uint64,bytes32,uint32,uint16)._subscriptionId (contracts/ArbitratorManager.sol#392) is not in mixedCase
Parameter ArbitratorManager.configureVRF(address,uint64,bytes32,uint32,uint16)._keyHash (contracts/ArbitratorManager.sol#393) is not in mixedCase
Parameter ArbitratorManager.configureVRF(address,uint64,bytes32,uint32,uint16)._callbackGasLimit (contracts/ArbitratorManager.sol#394) is not in mixedCase
Parameter ArbitratorManager.configureVRF(address,uint64,bytes32,uint32,uint16)._requestConfirmations (contracts/ArbitratorManager.sol#395) is not in mixedCase
Parameter ArbitratorManager.updateVRFSubscription(uint64)._subscriptionId (contracts/ArbitratorManager.sol#414) is not in mixedCase
Parameter ArbitratorManager.getArbitratorInfo(address)._arbitrator (contracts/ArbitratorManager.sol#430) is not in mixedCase
Parameter ArbitratorManager.getArbitratorsForCurrency(string)._currency (contracts/ArbitratorManager.sol#444) is not in mixedCase
Parameter ArbitratorManager.isActiveArbitrator(address)._arbitrator (contracts/ArbitratorManager.sol#458) is not in mixedCase
Parameter ArbitratorManager.arbitratorSupportsCurrency(address,string)._arbitrator (contracts/ArbitratorManager.sol#474) is not in mixedCase
Parameter ArbitratorManager.arbitratorSupportsCurrency(address,string)._currency (contracts/ArbitratorManager.sol#475) is not in mixedCase
Parameter ArbitratorManager.getActiveArbitratorCountForCurrency(string)._currency (contracts/ArbitratorManager.sol#495) is not in mixedCase
Parameter ArbitratorManager.getPendingArbitratorAssignment(uint256)._tradeId (contracts/ArbitratorManager.sol#514) is not in mixedCase
Variable ArbitratorManager.__gap (contracts/ArbitratorManager.sol#46) is not in mixedCase
Parameter Escrow.initialize(address,address,address)._hub (contracts/Escrow.sol#75) is not in mixedCase
Parameter Escrow.initialize(address,address,address)._priceOracle (contracts/Escrow.sol#76) is not in mixedCase
Parameter Escrow.initialize(address,address,address)._tradeContract (contracts/Escrow.sol#77) is not in mixedCase
Variable Escrow.__gap (contracts/Escrow.sol#61) is not in mixedCase
Parameter Hub.initialize(IHub.HubConfig,uint256)._initialConfig (contracts/Hub.sol#92) is not in mixedCase
Parameter Hub.initialize(IHub.HubConfig,uint256)._minDelay (contracts/Hub.sol#93) is not in mixedCase
Parameter Hub.updateConfig(IHub.HubConfig)._newConfig (contracts/Hub.sol#135) is not in mixedCase
Parameter Hub.updateAdmin(address)._newAdmin (contracts/Hub.sol#149) is not in mixedCase
Parameter Hub.pauseOperation(bytes32)._operation (contracts/Hub.sol#207) is not in mixedCase
Parameter Hub.unpauseOperation(bytes32)._operation (contracts/Hub.sol#220) is not in mixedCase
Parameter Hub.pauseContract(address,bool)._contract (contracts/Hub.sol#234) is not in mixedCase
Parameter Hub.pauseContract(address,bool)._paused (contracts/Hub.sol#234) is not in mixedCase
Parameter Hub.enhancedEmergencyPause(string,uint256)._reason (contracts/Hub.sol#248) is not in mixedCase
Parameter Hub.enhancedEmergencyPause(string,uint256)._extendedTimeout (contracts/Hub.sol#248) is not in mixedCase
Parameter Hub.batchPauseOperations(bytes32[])._operations (contracts/Hub.sol#271) is not in mixedCase
Parameter Hub.batchUnpauseOperations(bytes32[])._operations (contracts/Hub.sol#286) is not in mixedCase
Parameter Hub.isOperationPaused(bytes32)._operation (contracts/Hub.sol#349) is not in mixedCase
Parameter Hub.isContractPaused(address)._contract (contracts/Hub.sol#358) is not in mixedCase
Parameter Hub.batchCheckOperationsPaused(bytes32[])._operations (contracts/Hub.sol#376) is not in mixedCase
Parameter Hub.setTimelockController(address)._newTimelock (contracts/Hub.sol#526) is not in mixedCase
Variable Hub.__gap (contracts/Hub.sol#57) is not in mixedCase
Parameter Offer.initialize(address)._hub (contracts/Offer.sol#57) is not in mixedCase
Parameter Offer.getUserActiveOfferCount(address)._user (contracts/Offer.sol#71) is not in mixedCase
Parameter Offer.createOffer(IOffer.OfferType,string,address,uint256,uint256,uint256,string)._type (contracts/Offer.sol#96) is not in mixedCase
Parameter Offer.createOffer(IOffer.OfferType,string,address,uint256,uint256,uint256,string)._fiatCurrency (contracts/Offer.sol#97) is not in mixedCase
Parameter Offer.createOffer(IOffer.OfferType,string,address,uint256,uint256,uint256,string)._token (contracts/Offer.sol#98) is not in mixedCase
Parameter Offer.createOffer(IOffer.OfferType,string,address,uint256,uint256,uint256,string)._minAmount (contracts/Offer.sol#99) is not in mixedCase
Parameter Offer.createOffer(IOffer.OfferType,string,address,uint256,uint256,uint256,string)._maxAmount (contracts/Offer.sol#100) is not in mixedCase
Parameter Offer.createOffer(IOffer.OfferType,string,address,uint256,uint256,uint256,string)._rate (contracts/Offer.sol#101) is not in mixedCase
Parameter Offer.createOffer(IOffer.OfferType,string,address,uint256,uint256,uint256,string)._description (contracts/Offer.sol#102) is not in mixedCase
Parameter Offer.updateOffer(uint256,IOffer.OfferState,uint256,uint256,uint256)._offerId (contracts/Offer.sol#163) is not in mixedCase
Parameter Offer.updateOffer(uint256,IOffer.OfferState,uint256,uint256,uint256)._newState (contracts/Offer.sol#164) is not in mixedCase
Parameter Offer.updateOffer(uint256,IOffer.OfferState,uint256,uint256,uint256)._newRate (contracts/Offer.sol#165) is not in mixedCase
Parameter Offer.updateOffer(uint256,IOffer.OfferState,uint256,uint256,uint256)._newMin (contracts/Offer.sol#166) is not in mixedCase
Parameter Offer.updateOffer(uint256,IOffer.OfferState,uint256,uint256,uint256)._newMax (contracts/Offer.sol#167) is not in mixedCase
Parameter Offer.pauseOffer(uint256)._offerId (contracts/Offer.sol#245) is not in mixedCase
Parameter Offer.activateOffer(uint256)._offerId (contracts/Offer.sol#253) is not in mixedCase
Parameter Offer.archiveOffer(uint256)._offerId (contracts/Offer.sol#261) is not in mixedCase
Parameter Offer.getOffersByType(IOffer.OfferType,string,address,uint256,uint256)._type (contracts/Offer.sol#295) is not in mixedCase
Parameter Offer.getOffersByType(IOffer.OfferType,string,address,uint256,uint256)._fiatCurrency (contracts/Offer.sol#296) is not in mixedCase
Parameter Offer.getOffersByType(IOffer.OfferType,string,address,uint256,uint256)._token (contracts/Offer.sol#297) is not in mixedCase
Parameter Offer.getOffersByType(IOffer.OfferType,string,address,uint256,uint256)._offset (contracts/Offer.sol#298) is not in mixedCase
Parameter Offer.getOffersByType(IOffer.OfferType,string,address,uint256,uint256)._limit (contracts/Offer.sol#299) is not in mixedCase
Parameter Offer.getUserOffers(address,uint256,uint256)._user (contracts/Offer.sol#333) is not in mixedCase
Parameter Offer.getUserOffers(address,uint256,uint256)._offset (contracts/Offer.sol#334) is not in mixedCase
Parameter Offer.getUserOffers(address,uint256,uint256)._limit (contracts/Offer.sol#335) is not in mixedCase
Parameter Offer.getOffer(uint256)._offerId (contracts/Offer.sol#364) is not in mixedCase
Parameter Offer.getUserOffers(address)._user (contracts/Offer.sol#375) is not in mixedCase
Parameter Offer.updateOfferState(uint256,IOffer.OfferState)._offerId (contracts/Offer.sol#384) is not in mixedCase
Parameter Offer.updateOfferState(uint256,IOffer.OfferState)._newState (contracts/Offer.sol#384) is not in mixedCase
Parameter PriceOracle.initialize(address,address)._admin (contracts/PriceOracle.sol#130) is not in mixedCase
Parameter PriceOracle.initialize(address,address)._swapRouter (contracts/PriceOracle.sol#131) is not in mixedCase
Parameter PriceOracle.updateFiatPrices(string[],uint256[])._currencies (contracts/PriceOracle.sol#158) is not in mixedCase
Parameter PriceOracle.updateFiatPrices(string[],uint256[])._prices (contracts/PriceOracle.sol#159) is not in mixedCase
Parameter PriceOracle.registerPriceRoute(address,address[],uint24[],address,uint32)._token (contracts/PriceOracle.sol#188) is not in mixedCase
Parameter PriceOracle.registerPriceRoute(address,address[],uint24[],address,uint32)._path (contracts/PriceOracle.sol#189) is not in mixedCase
Parameter PriceOracle.registerPriceRoute(address,address[],uint24[],address,uint32)._fees (contracts/PriceOracle.sol#190) is not in mixedCase
Parameter PriceOracle.registerPriceRoute(address,address[],uint24[],address,uint32)._chainlinkFeed (contracts/PriceOracle.sol#191) is not in mixedCase
Parameter PriceOracle.registerPriceRoute(address,address[],uint24[],address,uint32)._twapPeriod (contracts/PriceOracle.sol#192) is not in mixedCase
Parameter PriceOracle.updateChainlinkFeed(string,address,uint8,uint256)._currency (contracts/PriceOracle.sol#220) is not in mixedCase
Parameter PriceOracle.updateChainlinkFeed(string,address,uint8,uint256)._feedAddress (contracts/PriceOracle.sol#221) is not in mixedCase
Parameter PriceOracle.updateChainlinkFeed(string,address,uint8,uint256)._decimals (contracts/PriceOracle.sol#222) is not in mixedCase
Parameter PriceOracle.updateChainlinkFeed(string,address,uint8,uint256)._heartbeat (contracts/PriceOracle.sol#223) is not in mixedCase
Parameter PriceOracle.getTokenPriceInUSD(address)._token (contracts/PriceOracle.sol#242) is not in mixedCase
Parameter PriceOracle.getCachedTokenPrice(address)._token (contracts/PriceOracle.sol#257) is not in mixedCase
Parameter PriceOracle.getTokenPriceInFiat(address,string,uint256)._token (contracts/PriceOracle.sol#279) is not in mixedCase
Parameter PriceOracle.getTokenPriceInFiat(address,string,uint256)._fiatCurrency (contracts/PriceOracle.sol#280) is not in mixedCase
Parameter PriceOracle.getTokenPriceInFiat(address,string,uint256)._amount (contracts/PriceOracle.sol#281) is not in mixedCase
Parameter PriceOracle.getFiatPrice(string)._currency (contracts/PriceOracle.sol#298) is not in mixedCase
Parameter PriceOracle.isTokenPriceValid(address)._token (contracts/PriceOracle.sol#321) is not in mixedCase
Parameter PriceOracle.getTokenPriceAge(address)._token (contracts/PriceOracle.sol#335) is not in mixedCase
Parameter PriceOracle.setEmergencyPause(bool)._paused (contracts/PriceOracle.sol#347) is not in mixedCase
Parameter PriceOracle.updateSwapRouter(address)._newRouter (contracts/PriceOracle.sol#356) is not in mixedCase
Function PriceOracle._getChainlinkPrice(address) (contracts/PriceOracle.sol#404-424) is not in mixedCase
Parameter PriceOracle._getChainlinkPrice(address)._feedAddress (contracts/PriceOracle.sol#404) is not in mixedCase
Parameter PriceOracle.updatePrices(string[],uint256[])._currencies (contracts/PriceOracle.sol#521) is not in mixedCase
Parameter PriceOracle.updatePrices(string[],uint256[])._prices (contracts/PriceOracle.sol#521) is not in mixedCase
Parameter PriceOracle.updateTokenRoute(address,IPriceOracle.TokenRoute)._token (contracts/PriceOracle.sol#528) is not in mixedCase
Parameter PriceOracle.updateTokenRoute(address,IPriceOracle.TokenRoute)._route (contracts/PriceOracle.sol#528) is not in mixedCase
Parameter PriceOracle.isPriceValid(string)._currency (contracts/PriceOracle.sol#548) is not in mixedCase
Parameter PriceOracle.getPriceAge(string)._currency (contracts/PriceOracle.sol#557) is not in mixedCase
Parameter PriceOracle.checkCircuitBreaker(address,uint256)._token (contracts/PriceOracle.sol#572) is not in mixedCase
Parameter PriceOracle.checkCircuitBreaker(address,uint256)._currentPrice (contracts/PriceOracle.sol#572) is not in mixedCase
Parameter PriceOracle.resetCircuitBreaker(address)._token (contracts/PriceOracle.sol#606) is not in mixedCase
Parameter PriceOracle.isCircuitBreakerActive(address)._token (contracts/PriceOracle.sol#617) is not in mixedCase
Parameter PriceOracle.setCircuitBreakerDeviation(uint256)._newDeviationBps (contracts/PriceOracle.sol#626) is not in mixedCase
Variable PriceOracle.__gap (contracts/PriceOracle.sol#78) is not in mixedCase
Parameter Profile.initialize(address)._hub (contracts/Profile.sol#83) is not in mixedCase
Parameter Profile.updateContact(string,string)._contact (contracts/Profile.sol#99) is not in mixedCase
Parameter Profile.updateContact(string,string)._publicKey (contracts/Profile.sol#100) is not in mixedCase
Parameter Profile.updateTradeCount(address,bool)._user (contracts/Profile.sol#131) is not in mixedCase
Parameter Profile.updateTradeCount(address,bool)._completed (contracts/Profile.sol#132) is not in mixedCase
Parameter Profile.updateActiveOffers(address,int256)._user (contracts/Profile.sol#159) is not in mixedCase
Parameter Profile.updateActiveOffers(address,int256)._delta (contracts/Profile.sol#160) is not in mixedCase
Parameter Profile.updateActiveTrades(address,int256)._user (contracts/Profile.sol#197) is not in mixedCase
Parameter Profile.updateActiveTrades(address,int256)._delta (contracts/Profile.sol#198) is not in mixedCase
Parameter Profile.getProfile(address)._user (contracts/Profile.sol#233) is not in mixedCase
Parameter Profile.profileExists(address)._user (contracts/Profile.sol#242) is not in mixedCase
Parameter Profile.getTradingStats(address)._user (contracts/Profile.sol#254) is not in mixedCase
Parameter Profile.getReputationScore(address)._user (contracts/Profile.sol#274) is not in mixedCase
Parameter Profile.canCreateOffer(address)._user (contracts/Profile.sol#290) is not in mixedCase
Parameter Profile.canCreateTrade(address)._user (contracts/Profile.sol#302) is not in mixedCase
Parameter Profile.updateHub(address)._newHub (contracts/Profile.sol#313) is not in mixedCase
Parameter Profile.updateAdmin(address)._newAdmin (contracts/Profile.sol#326) is not in mixedCase
Variable Profile.__gap (contracts/Profile.sol#36) is not in mixedCase
Parameter Trade.initialize(address,address,address,address,address)._hub (contracts/Trade.sol#138) is not in mixedCase
Parameter Trade.initialize(address,address,address,address,address)._offerContract (contracts/Trade.sol#139) is not in mixedCase
Parameter Trade.initialize(address,address,address,address,address)._profileContract (contracts/Trade.sol#140) is not in mixedCase
Parameter Trade.initialize(address,address,address,address,address)._escrowContract (contracts/Trade.sol#141) is not in mixedCase
Parameter Trade.initialize(address,address,address,address,address)._arbitratorManager (contracts/Trade.sol#142) is not in mixedCase
Parameter Trade.createTrade(uint256,uint256,string)._offerId (contracts/Trade.sol#169) is not in mixedCase
Parameter Trade.createTrade(uint256,uint256,string)._amount (contracts/Trade.sol#170) is not in mixedCase
Parameter Trade.createTrade(uint256,uint256,string)._buyerContact (contracts/Trade.sol#171) is not in mixedCase
Parameter Trade.acceptTrade(uint256,string)._tradeId (contracts/Trade.sol#247) is not in mixedCase
Parameter Trade.acceptTrade(uint256,string)._sellerContact (contracts/Trade.sol#248) is not in mixedCase
Parameter Trade.fundEscrow(uint256)._tradeId (contracts/Trade.sol#283) is not in mixedCase
Parameter Trade.markFiatDeposited(uint256)._tradeId (contracts/Trade.sol#326) is not in mixedCase
Parameter Trade.releaseEscrow(uint256)._tradeId (contracts/Trade.sol#350) is not in mixedCase
Parameter Trade.cancelTrade(uint256)._tradeId (contracts/Trade.sol#386) is not in mixedCase
Parameter Trade.refundExpiredTrade(uint256)._tradeId (contracts/Trade.sol#424) is not in mixedCase
Parameter Trade.disputeTrade(uint256,string)._tradeId (contracts/Trade.sol#459) is not in mixedCase
Parameter Trade.disputeTrade(uint256,string)._reason (contracts/Trade.sol#459) is not in mixedCase
Parameter Trade.submitEvidence(uint256,string)._tradeId (contracts/Trade.sol#521) is not in mixedCase
Parameter Trade.submitEvidence(uint256,string)._evidence (contracts/Trade.sol#521) is not in mixedCase
Parameter Trade.resolveDispute(uint256,address)._tradeId (contracts/Trade.sol#553) is not in mixedCase
Parameter Trade.resolveDispute(uint256,address)._winner (contracts/Trade.sol#553) is not in mixedCase
Parameter Trade.getDisputeInfo(uint256)._tradeId (contracts/Trade.sol#610) is not in mixedCase
Parameter Trade.getTrade(uint256)._tradeId (contracts/Trade.sol#625) is not in mixedCase
Parameter Trade.calculateFees(uint256)._amount (contracts/Trade.sol#635) is not in mixedCase
Variable Trade.__gap (contracts/Trade.sol#40) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Math.log2(uint256) (node_modules/@openzeppelin/contracts/utils/math/Math.sol#612-651) uses literals with too many digits:
	- r = r | byte(uint256,uint256)(x >> r,0x0000010102020202030303030303030300000000000000000000000000000000) (node_modules/@openzeppelin/contracts/utils/math/Math.sol#649)
ArbitratorManager.configureVRF(address,uint64,bytes32,uint32,uint16) (contracts/ArbitratorManager.sol#390-408) uses literals with too many digits:
	- require(bool,string)(_callbackGasLimit >= 100000,Gas limit too low) (contracts/ArbitratorManager.sol#398)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits

ArbitratorManager.__gap (contracts/ArbitratorManager.sol#46) is never used in ArbitratorManager (contracts/ArbitratorManager.sol#18-544)
Escrow.__gap (contracts/Escrow.sol#61) is never used in Escrow (contracts/Escrow.sol#22-520)
Hub.__gap (contracts/Hub.sol#57) is never used in Hub (contracts/Hub.sol#17-536)
PriceOracle.__gap (contracts/PriceOracle.sol#78) is never used in PriceOracle (contracts/PriceOracle.sol#19-659)
Profile.__gap (contracts/Profile.sol#36) is never used in Profile (contracts/Profile.sol#16-354)
Trade.__gap (contracts/Trade.sol#40) is never used in Trade (contracts/Trade.sol#22-684)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable

MockERC20._decimals (contracts/MockERC20.sol#12) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
**THIS CHECKLIST IS NOT COMPLETE**. Use `--show-ignored-findings` to show all the results.
Summary
 - [arbitrary-send-erc20](#arbitrary-send-erc20) (1 results) (High)
 - [arbitrary-send-eth](#arbitrary-send-eth) (2 results) (High)
 - [weak-prng](#weak-prng) (1 results) (High)
 - [incorrect-exp](#incorrect-exp) (1 results) (High)
 - [reentrancy-eth](#reentrancy-eth) (1 results) (High)
 - [uninitialized-state](#uninitialized-state) (1 results) (High)
 - [divide-before-multiply](#divide-before-multiply) (9 results) (Medium)
 - [incorrect-equality](#incorrect-equality) (5 results) (Medium)
 - [reentrancy-no-eth](#reentrancy-no-eth) (1 results) (Medium)
 - [unused-return](#unused-return) (9 results) (Medium)
 - [shadowing-local](#shadowing-local) (2 results) (Low)
 - [calls-loop](#calls-loop) (1 results) (Low)
 - [reentrancy-benign](#reentrancy-benign) (6 results) (Low)
 - [reentrancy-events](#reentrancy-events) (4 results) (Low)
 - [return-bomb](#return-bomb) (1 results) (Low)
 - [timestamp](#timestamp) (22 results) (Low)
 - [assembly](#assembly) (63 results) (Informational)
 - [pragma](#pragma) (1 results) (Informational)
 - [cyclomatic-complexity](#cyclomatic-complexity) (1 results) (Informational)
 - [solc-version](#solc-version) (10 results) (Informational)
 - [low-level-calls](#low-level-calls) (6 results) (Informational)
 - [missing-inheritance](#missing-inheritance) (1 results) (Informational)
 - [naming-convention](#naming-convention) (170 results) (Informational)
 - [too-many-digits](#too-many-digits) (2 results) (Informational)
 - [unused-state](#unused-state) (6 results) (Informational)
 - [immutable-states](#immutable-states) (1 results) (Optimization)
## arbitrary-send-erc20
Impact: High
Confidence: High
 - [ ] ID-0
[Escrow.deposit(uint256,address,uint256,address)](contracts/Escrow.sol#L108-L132) uses arbitrary from in transferFrom: [IERC20(tokenAddress).safeTransferFrom(depositor,address(this),amount)](contracts/Escrow.sol#L124)

contracts/Escrow.sol#L108-L132


## arbitrary-send-eth
Impact: High
Confidence: Medium
 - [ ] ID-1
[TimelockController._execute(address,uint256,bytes)](node_modules/@openzeppelin/contracts/governance/TimelockController.sol#L411-L414) sends eth to arbitrary user
	Dangerous calls:
	- [(success,returndata) = target.call{value: value}(data)](node_modules/@openzeppelin/contracts/governance/TimelockController.sol#L412)

node_modules/@openzeppelin/contracts/governance/TimelockController.sol#L411-L414


 - [ ] ID-2
[Escrow._safeTransfer(address,address,uint256)](contracts/Escrow.sol#L208-L223) sends eth to arbitrary user
	Dangerous calls:
	- [(success,None) = to.call{gas: 2300,value: amount}()](contracts/Escrow.sol#L213)
	- [(success,None) = to.call{value: amount}()](contracts/Escrow.sol#L216)

contracts/Escrow.sol#L208-L223


## weak-prng
Impact: High
Confidence: Medium
 - [ ] ID-3
[ArbitratorManager._assignArbitratorFallback(uint256,string)](contracts/ArbitratorManager.sol#L197-L243) uses a weak PRNG: "[selectedIndex = uint256(seed) % activeCount](contracts/ArbitratorManager.sol#L235)" 

contracts/ArbitratorManager.sol#L197-L243


## incorrect-exp
Impact: High
Confidence: Medium
 - [ ] ID-4
[Math.mulDiv(uint256,uint256,uint256)](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L204-L275) has bitwise-xor operator ^ instead of the exponentiation operator **: 
	 - [inverse = (3 * denominator) ^ 2](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L257)

node_modules/@openzeppelin/contracts/utils/math/Math.sol#L204-L275


## reentrancy-eth
Impact: High
Confidence: Medium
 - [ ] ID-5
Reentrancy in [Trade.fundEscrow(uint256)](contracts/Trade.sol#L283-L320):
	External calls:
	- [escrowContract.deposit{value: msg.value}(_tradeId,address(0),msg.value,msg.sender)](contracts/Trade.sol#L300)
	- [escrowContract.deposit(_tradeId,trade.tokenAddress,trade.amount,address(this))](contracts/Trade.sol#L310)
	External calls sending eth:
	- [escrowContract.deposit{value: msg.value}(_tradeId,address(0),msg.value,msg.sender)](contracts/Trade.sol#L300)
	State variables written after the call(s):
	- [trade.state = TradeState.EscrowFunded](contracts/Trade.sol#L314)
	[Trade.trades](contracts/Trade.sol#L26) can be used in cross function reentrancies:
	- [Trade.getTrade(uint256)](contracts/Trade.sol#L625-L628)
	- [Trade.trades](contracts/Trade.sol#L26)

contracts/Trade.sol#L283-L320


## uninitialized-state
Impact: High
Confidence: High
 - [ ] ID-6
[PriceOracle.tokenPrices](contracts/PriceOracle.sol#L63) is never initialized. It is used in:
	- [PriceOracle.getCachedTokenPrice(address)](contracts/PriceOracle.sol#L257-L269)
	- [PriceOracle.isTokenPriceValid(address)](contracts/PriceOracle.sol#L321-L328)
	- [PriceOracle.getTokenPriceAge(address)](contracts/PriceOracle.sol#L335-L341)
	- [PriceOracle._getTokenPriceInUSD(address)](contracts/PriceOracle.sol#L372-L397)

contracts/PriceOracle.sol#L63


## divide-before-multiply
Impact: Medium
Confidence: Medium
 - [ ] ID-7
[Math.mulDiv(uint256,uint256,uint256)](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L204-L275) performs a multiplication on the result of a division:
	- [denominator = denominator / twos](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L242)
	- [inverse *= 2 - denominator * inverse](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L265)

node_modules/@openzeppelin/contracts/utils/math/Math.sol#L204-L275


 - [ ] ID-8
[Math.mulDiv(uint256,uint256,uint256)](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L204-L275) performs a multiplication on the result of a division:
	- [denominator = denominator / twos](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L242)
	- [inverse *= 2 - denominator * inverse](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L261)

node_modules/@openzeppelin/contracts/utils/math/Math.sol#L204-L275


 - [ ] ID-9
[Math.mulDiv(uint256,uint256,uint256)](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L204-L275) performs a multiplication on the result of a division:
	- [denominator = denominator / twos](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L242)
	- [inverse *= 2 - denominator * inverse](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L264)

node_modules/@openzeppelin/contracts/utils/math/Math.sol#L204-L275


 - [ ] ID-10
[Math.mulDiv(uint256,uint256,uint256)](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L204-L275) performs a multiplication on the result of a division:
	- [denominator = denominator / twos](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L242)
	- [inverse *= 2 - denominator * inverse](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L266)

node_modules/@openzeppelin/contracts/utils/math/Math.sol#L204-L275


 - [ ] ID-11
[Math.invMod(uint256,uint256)](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L315-L361) performs a multiplication on the result of a division:
	- [quotient = gcd / remainder](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L337)
	- [(gcd,remainder) = (remainder,gcd - remainder * quotient)](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L339-L346)

node_modules/@openzeppelin/contracts/utils/math/Math.sol#L315-L361


 - [ ] ID-12
[Math.mulDiv(uint256,uint256,uint256)](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L204-L275) performs a multiplication on the result of a division:
	- [denominator = denominator / twos](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L242)
	- [inverse *= 2 - denominator * inverse](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L262)

node_modules/@openzeppelin/contracts/utils/math/Math.sol#L204-L275


 - [ ] ID-13
[Math.mulDiv(uint256,uint256,uint256)](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L204-L275) performs a multiplication on the result of a division:
	- [denominator = denominator / twos](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L242)
	- [inverse = (3 * denominator) ^ 2](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L257)

node_modules/@openzeppelin/contracts/utils/math/Math.sol#L204-L275


 - [ ] ID-14
[Math.mulDiv(uint256,uint256,uint256)](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L204-L275) performs a multiplication on the result of a division:
	- [denominator = denominator / twos](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L242)
	- [inverse *= 2 - denominator * inverse](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L263)

node_modules/@openzeppelin/contracts/utils/math/Math.sol#L204-L275


 - [ ] ID-15
[Math.mulDiv(uint256,uint256,uint256)](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L204-L275) performs a multiplication on the result of a division:
	- [low = low / twos](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L245)
	- [result = low * inverse](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L272)

node_modules/@openzeppelin/contracts/utils/math/Math.sol#L204-L275


## incorrect-equality
Impact: Medium
Confidence: High
 - [ ] ID-16
[TimelockController.getOperationState(bytes32)](node_modules/@openzeppelin/contracts/governance/TimelockController.sol#L206-L217) uses a dangerous strict equality:
	- [timestamp == _DONE_TIMESTAMP](node_modules/@openzeppelin/contracts/governance/TimelockController.sol#L210)

node_modules/@openzeppelin/contracts/governance/TimelockController.sol#L206-L217


 - [ ] ID-17
[PriceOracle.getTokenPriceInFiat(address,string,uint256)](contracts/PriceOracle.sol#L278-L291) uses a dangerous strict equality:
	- [fiatPriceUSD == 0](contracts/PriceOracle.sol#L286)

contracts/PriceOracle.sol#L278-L291


 - [ ] ID-18
[TimelockController.getOperationState(bytes32)](node_modules/@openzeppelin/contracts/governance/TimelockController.sol#L206-L217) uses a dangerous strict equality:
	- [timestamp == 0](node_modules/@openzeppelin/contracts/governance/TimelockController.sol#L208)

node_modules/@openzeppelin/contracts/governance/TimelockController.sol#L206-L217


 - [ ] ID-19
[Profile.getReputationScore(address)](contracts/Profile.sol#L274-L283) uses a dangerous strict equality:
	- [totalTrades == 0](contracts/Profile.sol#L278)

contracts/Profile.sol#L274-L283


 - [ ] ID-20
[Offer.getUserActiveOfferCount(address)](contracts/Offer.sol#L71-L82) uses a dangerous strict equality:
	- [_offers[userOfferIds[i]].state == OfferState.Active](contracts/Offer.sol#L76)

contracts/Offer.sol#L71-L82


## reentrancy-no-eth
Impact: Medium
Confidence: Medium
 - [ ] ID-21
Reentrancy in [Trade.disputeTrade(uint256,string)](contracts/Trade.sol#L459-L514):
	External calls:
	- [assignedArbitrator = arbitratorManager.assignArbitrator(_tradeId,trade.fiatCurrency)](contracts/Trade.sol#L508)
	State variables written after the call(s):
	- [disputes[_tradeId].arbitrator = assignedArbitrator](contracts/Trade.sol#L509)
	[Trade.disputes](contracts/Trade.sol#L37) can be used in cross function reentrancies:
	- [Trade.disputes](contracts/Trade.sol#L37)
	- [Trade.getDisputeInfo(uint256)](contracts/Trade.sol#L610-L616)
	- [trade.arbitrator = assignedArbitrator](contracts/Trade.sol#L510)
	[Trade.trades](contracts/Trade.sol#L26) can be used in cross function reentrancies:
	- [Trade.getTrade(uint256)](contracts/Trade.sol#L625-L628)
	- [Trade.trades](contracts/Trade.sol#L26)

contracts/Trade.sol#L459-L514


## unused-return
Impact: Medium
Confidence: Medium
 - [ ] ID-22
[Trade.resolveDispute(uint256,address)](contracts/Trade.sol#L553-L603) ignores return value by [escrowContract.release(_tradeId,trade.tokenAddress,_winner,dispute.arbitrator)](contracts/Trade.sol#L588-L593)

contracts/Trade.sol#L553-L603


 - [ ] ID-23
[TimelockController._execute(address,uint256,bytes)](node_modules/@openzeppelin/contracts/governance/TimelockController.sol#L411-L414) ignores return value by [Address.verifyCallResult(success,returndata)](node_modules/@openzeppelin/contracts/governance/TimelockController.sol#L413)

node_modules/@openzeppelin/contracts/governance/TimelockController.sol#L411-L414


 - [ ] ID-24
[ERC1967Utils.upgradeBeaconToAndCall(address,bytes)](node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol#L157-L166) ignores return value by [Address.functionDelegateCall(IBeacon(newBeacon).implementation(),data)](node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol#L162)

node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol#L157-L166


 - [ ] ID-25
[ERC1967Utils.upgradeToAndCall(address,bytes)](node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol#L67-L76) ignores return value by [Address.functionDelegateCall(newImplementation,data)](node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol#L72)

node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol#L67-L76


 - [ ] ID-26
[Offer.createOffer(IOffer.OfferType,string,address,uint256,uint256,uint256,string)](contracts/Offer.sol#L95-L152) ignores return value by [_activeOfferIds.add(offerId)](contracts/Offer.sol#L139)

contracts/Offer.sol#L95-L152


 - [ ] ID-27
[PriceOracle._getChainlinkPrice(address)](contracts/PriceOracle.sol#L404-L424) ignores return value by [(None,price,None,updatedAt,None) = priceFeed.latestRoundData()](contracts/PriceOracle.sol#L407)

contracts/PriceOracle.sol#L404-L424


 - [ ] ID-28
[Offer._updateOfferIndexes(uint256,IOffer.OfferState,IOffer.OfferState)](contracts/Offer.sol#L436-L447) ignores return value by [_activeOfferIds.remove(_offerId)](contracts/Offer.sol#L442)

contracts/Offer.sol#L436-L447


 - [ ] ID-29
[Offer._updateOfferIndexes(uint256,IOffer.OfferState,IOffer.OfferState)](contracts/Offer.sol#L436-L447) ignores return value by [_activeOfferIds.add(_offerId)](contracts/Offer.sol#L445)

contracts/Offer.sol#L436-L447


 - [ ] ID-30
[PriceOracle._getUniswapPrice(address,PriceOracle.PriceRoute)](contracts/PriceOracle.sol#L432-L474) ignores return value by [(sqrtPriceX96) = IUniswapV3Pool(poolAddress).slot0()](contracts/PriceOracle.sol#L454-L473)

contracts/PriceOracle.sol#L432-L474


## shadowing-local
Impact: Low
Confidence: High
 - [ ] ID-31
[MockERC20.constructor(string,string,uint8).symbol](contracts/MockERC20.sol#L16) shadows:
	- [ERC20.symbol()](node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol#L60-L62) (function)
	- [IERC20Metadata.symbol()](node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol#L20) (function)

contracts/MockERC20.sol#L16


 - [ ] ID-32
[MockERC20.constructor(string,string,uint8).name](contracts/MockERC20.sol#L15) shadows:
	- [ERC20.name()](node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol#L52-L54) (function)
	- [IERC20Metadata.name()](node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol#L15) (function)

contracts/MockERC20.sol#L15


## calls-loop
Impact: Low
Confidence: Medium
 - [ ] ID-33
[TimelockController._execute(address,uint256,bytes)](node_modules/@openzeppelin/contracts/governance/TimelockController.sol#L411-L414) has external calls inside a loop: [(success,returndata) = target.call{value: value}(data)](node_modules/@openzeppelin/contracts/governance/TimelockController.sol#L412)
	Calls stack containing the loop:
		TimelockController.executeBatch(address[],uint256[],bytes[],bytes32,bytes32)

node_modules/@openzeppelin/contracts/governance/TimelockController.sol#L411-L414


## reentrancy-benign
Impact: Low
Confidence: Medium
 - [ ] ID-34
Reentrancy in [Trade.resolveDispute(uint256,address)](contracts/Trade.sol#L553-L603):
	External calls:
	- [arbitratorManager.updateArbitratorReputation(dispute.arbitrator,true)](contracts/Trade.sol#L582)
	State variables written after the call(s):
	- [_recordStateTransition(_tradeId,TradeState.EscrowDisputed,TradeState.DisputeResolved)](contracts/Trade.sol#L585)
		- [tradeHistory[_tradeId].push(StateTransitionRecord({fromState:_from,toState:_to,timestamp:block.timestamp,actor:msg.sender}))](contracts/Trade.sol#L652-L657)

contracts/Trade.sol#L553-L603


 - [ ] ID-35
Reentrancy in [ArbitratorManager._requestRandomArbitrator(uint256,string)](contracts/ArbitratorManager.sol#L250-L289):
	External calls:
	- [requestId = vrfCoordinator.requestRandomWords(vrfKeyHash,vrfSubscriptionId,vrfRequestConfirmations,vrfCallbackGasLimit,vrfNumWords)](contracts/ArbitratorManager.sol#L269-L275)
	State variables written after the call(s):
	- [vrfRequests[requestId] = VRFRequest({tradeId:_tradeId,fiatCurrency:_fiatCurrency,requestedAt:block.timestamp,fulfilled:false})](contracts/ArbitratorManager.sol#L278-L283)

contracts/ArbitratorManager.sol#L250-L289


 - [ ] ID-36
Reentrancy in [Trade.fundEscrow(uint256)](contracts/Trade.sol#L283-L320):
	External calls:
	- [escrowContract.deposit{value: msg.value}(_tradeId,address(0),msg.value,msg.sender)](contracts/Trade.sol#L300)
	- [escrowContract.deposit(_tradeId,trade.tokenAddress,trade.amount,address(this))](contracts/Trade.sol#L310)
	External calls sending eth:
	- [escrowContract.deposit{value: msg.value}(_tradeId,address(0),msg.value,msg.sender)](contracts/Trade.sol#L300)
	State variables written after the call(s):
	- [_recordStateTransition(_tradeId,TradeState.RequestAccepted,TradeState.EscrowFunded)](contracts/Trade.sol#L317)
		- [tradeHistory[_tradeId].push(StateTransitionRecord({fromState:_from,toState:_to,timestamp:block.timestamp,actor:msg.sender}))](contracts/Trade.sol#L652-L657)

contracts/Trade.sol#L283-L320


 - [ ] ID-37
Reentrancy in [Trade.cancelTrade(uint256)](contracts/Trade.sol#L386-L418):
	External calls:
	- [escrowContract.refund(_tradeId,trade.tokenAddress,trade.seller)](contracts/Trade.sol#L403)
	- [profileContract.updateActiveTrades(trade.buyer,- 1)](contracts/Trade.sol#L408)
	- [profileContract.updateActiveTrades(trade.seller,- 1)](contracts/Trade.sol#L409)
	State variables written after the call(s):
	- [_recordStateTransition(_tradeId,currentState,newState)](contracts/Trade.sol#L412)
		- [tradeHistory[_tradeId].push(StateTransitionRecord({fromState:_from,toState:_to,timestamp:block.timestamp,actor:msg.sender}))](contracts/Trade.sol#L652-L657)

contracts/Trade.sol#L386-L418


 - [ ] ID-38
Reentrancy in [Trade.refundExpiredTrade(uint256)](contracts/Trade.sol#L424-L450):
	External calls:
	- [escrowContract.refund(_tradeId,trade.tokenAddress,trade.seller)](contracts/Trade.sol#L439)
	- [profileContract.updateActiveTrades(trade.buyer,- 1)](contracts/Trade.sol#L442)
	- [profileContract.updateActiveTrades(trade.seller,- 1)](contracts/Trade.sol#L443)
	State variables written after the call(s):
	- [_recordStateTransition(_tradeId,TradeState.EscrowFunded,TradeState.EscrowRefunded)](contracts/Trade.sol#L446)
		- [tradeHistory[_tradeId].push(StateTransitionRecord({fromState:_from,toState:_to,timestamp:block.timestamp,actor:msg.sender}))](contracts/Trade.sol#L652-L657)

contracts/Trade.sol#L424-L450


 - [ ] ID-39
Reentrancy in [Trade.releaseEscrow(uint256)](contracts/Trade.sol#L350-L380):
	External calls:
	- [netAmount = escrowContract.release(_tradeId,trade.tokenAddress,trade.buyer,address(0))](contracts/Trade.sol#L363-L368)
	- [profileContract.updateActiveTrades(trade.buyer,- 1)](contracts/Trade.sol#L371)
	- [profileContract.updateActiveTrades(trade.seller,- 1)](contracts/Trade.sol#L372)
	- [profileContract.updateTradeCount(trade.buyer,true)](contracts/Trade.sol#L373)
	- [profileContract.updateTradeCount(trade.seller,true)](contracts/Trade.sol#L374)
	State variables written after the call(s):
	- [_recordStateTransition(_tradeId,TradeState.FiatDeposited,TradeState.EscrowReleased)](contracts/Trade.sol#L377)
		- [tradeHistory[_tradeId].push(StateTransitionRecord({fromState:_from,toState:_to,timestamp:block.timestamp,actor:msg.sender}))](contracts/Trade.sol#L652-L657)

contracts/Trade.sol#L350-L380


## reentrancy-events
Impact: Low
Confidence: Medium
 - [ ] ID-40
Reentrancy in [TimelockController.executeBatch(address[],uint256[],bytes[],bytes32,bytes32)](node_modules/@openzeppelin/contracts/governance/TimelockController.sol#L384-L406):
	External calls:
	- [_execute(target,value,payload)](node_modules/@openzeppelin/contracts/governance/TimelockController.sol#L402)
		- [(success,returndata) = target.call{value: value}(data)](node_modules/@openzeppelin/contracts/governance/TimelockController.sol#L412)
	Event emitted after the call(s):
	- [CallExecuted(id,i,target,value,payload)](node_modules/@openzeppelin/contracts/governance/TimelockController.sol#L403)

node_modules/@openzeppelin/contracts/governance/TimelockController.sol#L384-L406


 - [ ] ID-41
Reentrancy in [Offer.archiveOffer(uint256)](contracts/Offer.sol#L261-L282):
	External calls:
	- [profile.updateActiveOffers(msg.sender,- 1)](contracts/Offer.sol#L277)
	Event emitted after the call(s):
	- [OfferArchived(_offerId,msg.sender)](contracts/Offer.sol#L280)
	- [OfferStateChanged(_offerId,oldState,OfferState.Archived)](contracts/Offer.sol#L281)

contracts/Offer.sol#L261-L282


 - [ ] ID-42
Reentrancy in [TimelockController.execute(address,uint256,bytes,bytes32,bytes32)](node_modules/@openzeppelin/contracts/governance/TimelockController.sol#L357-L370):
	External calls:
	- [_execute(target,value,payload)](node_modules/@openzeppelin/contracts/governance/TimelockController.sol#L367)
		- [(success,returndata) = target.call{value: value}(data)](node_modules/@openzeppelin/contracts/governance/TimelockController.sol#L412)
	Event emitted after the call(s):
	- [CallExecuted(id,0,target,value,payload)](node_modules/@openzeppelin/contracts/governance/TimelockController.sol#L368)

node_modules/@openzeppelin/contracts/governance/TimelockController.sol#L357-L370


 - [ ] ID-43
Reentrancy in [ArbitratorManager._requestRandomArbitrator(uint256,string)](contracts/ArbitratorManager.sol#L250-L289):
	External calls:
	- [requestId = vrfCoordinator.requestRandomWords(vrfKeyHash,vrfSubscriptionId,vrfRequestConfirmations,vrfCallbackGasLimit,vrfNumWords)](contracts/ArbitratorManager.sol#L269-L275)
	Event emitted after the call(s):
	- [VRFRandomnessRequested(requestId,_tradeId,_fiatCurrency)](contracts/ArbitratorManager.sol#L285)

contracts/ArbitratorManager.sol#L250-L289


## return-bomb
Impact: Low
Confidence: Medium
 - [ ] ID-44
[Escrow._safeTransfer(address,address,uint256)](contracts/Escrow.sol#L208-L223) tries to limit the gas of an external call that controls implicit decoding
	[(success,None) = to.call{gas: 2300,value: amount}()](contracts/Escrow.sol#L213)

contracts/Escrow.sol#L208-L223


## timestamp
Impact: Low
Confidence: Medium
 - [ ] ID-45
[PriceOracle._getChainlinkPrice(address)](contracts/PriceOracle.sol#L404-L424) uses timestamp for comparisons
	Dangerous comparisons:
	- [block.timestamp > updatedAt + MAX_PRICE_AGE](contracts/PriceOracle.sol#L410)

contracts/PriceOracle.sol#L404-L424


 - [ ] ID-46
[Offer._offerExists(uint256)](contracts/Offer.sol#L411-L413) uses timestamp for comparisons
	Dangerous comparisons:
	- [_offerId > 0 && _offerId < nextOfferId && _offers[_offerId].owner != address(0)](contracts/Offer.sol#L412)

contracts/Offer.sol#L411-L413


 - [ ] ID-47
[Trade.disputeTrade(uint256,string)](contracts/Trade.sol#L459-L514) uses timestamp for comparisons
	Dangerous comparisons:
	- [block.timestamp > trade.disputeDeadline](contracts/Trade.sol#L483)

contracts/Trade.sol#L459-L514


 - [ ] ID-48
[TimelockController.getOperationState(bytes32)](node_modules/@openzeppelin/contracts/governance/TimelockController.sol#L206-L217) uses timestamp for comparisons
	Dangerous comparisons:
	- [timestamp == 0](node_modules/@openzeppelin/contracts/governance/TimelockController.sol#L208)
	- [timestamp == _DONE_TIMESTAMP](node_modules/@openzeppelin/contracts/governance/TimelockController.sol#L210)
	- [timestamp > block.timestamp](node_modules/@openzeppelin/contracts/governance/TimelockController.sol#L212)

node_modules/@openzeppelin/contracts/governance/TimelockController.sol#L206-L217


 - [ ] ID-49
[Trade.refundExpiredTrade(uint256)](contracts/Trade.sol#L424-L450) uses timestamp for comparisons
	Dangerous comparisons:
	- [block.timestamp <= trade.expiresAt](contracts/Trade.sol#L431)

contracts/Trade.sol#L424-L450


 - [ ] ID-50
[Offer.getUserActiveOfferCount(address)](contracts/Offer.sol#L71-L82) uses timestamp for comparisons
	Dangerous comparisons:
	- [_offers[userOfferIds[i]].state == OfferState.Active](contracts/Offer.sol#L76)

contracts/Offer.sol#L71-L82


 - [ ] ID-51
[Escrow.performSwapAndBurn(address,uint256,address,address,uint256)](contracts/Escrow.sol#L318-L359) uses timestamp for comparisons
	Dangerous comparisons:
	- [amountOut < minAmountOut](contracts/Escrow.sol#L349)

contracts/Escrow.sol#L318-L359


 - [ ] ID-52
[PriceOracle.isPriceValid(string)](contracts/PriceOracle.sol#L548-L555) uses timestamp for comparisons
	Dangerous comparisons:
	- [block.timestamp > priceData.updatedAt + MAX_PRICE_AGE](contracts/PriceOracle.sol#L552)

contracts/PriceOracle.sol#L548-L555


 - [ ] ID-53
[PriceOracle.getPriceAge(string)](contracts/PriceOracle.sol#L557-L563) uses timestamp for comparisons
	Dangerous comparisons:
	- [block.timestamp > priceData.updatedAt](contracts/PriceOracle.sol#L561-L562)

contracts/PriceOracle.sol#L557-L563


 - [ ] ID-54
[Profile.profileExists(address)](contracts/Profile.sol#L242-L244) uses timestamp for comparisons
	Dangerous comparisons:
	- [_profiles[_user].createdAt > 0](contracts/Profile.sol#L243)

contracts/Profile.sol#L242-L244


 - [ ] ID-55
[Profile.getReputationScore(address)](contracts/Profile.sol#L274-L283) uses timestamp for comparisons
	Dangerous comparisons:
	- [totalTrades == 0](contracts/Profile.sol#L278)

contracts/Profile.sol#L274-L283


 - [ ] ID-56
[Profile.canCreateOffer(address)](contracts/Profile.sol#L290-L295) uses timestamp for comparisons
	Dangerous comparisons:
	- [profile.activeOffers < config.maxActiveOffers](contracts/Profile.sol#L294)

contracts/Profile.sol#L290-L295


 - [ ] ID-57
[PriceOracle.getFiatPrice(string)](contracts/PriceOracle.sol#L298-L314) uses timestamp for comparisons
	Dangerous comparisons:
	- [block.timestamp > priceData.updatedAt + MAX_PRICE_AGE](contracts/PriceOracle.sol#L309)

contracts/PriceOracle.sol#L298-L314


 - [ ] ID-58
[Escrow.emergencyWithdraw(uint256,address,address,uint256)](contracts/Escrow.sol#L452-L482) uses timestamp for comparisons
	Dangerous comparisons:
	- [require(bool,string)(block.timestamp >= emergencyWithdrawalTimelock[withdrawalKey],Timelock not expired)](contracts/Escrow.sol#L466)

contracts/Escrow.sol#L452-L482


 - [ ] ID-59
[PriceOracle.isTokenPriceValid(address)](contracts/PriceOracle.sol#L321-L328) uses timestamp for comparisons
	Dangerous comparisons:
	- [block.timestamp > priceData.updatedAt + MAX_PRICE_AGE](contracts/PriceOracle.sol#L325)

contracts/PriceOracle.sol#L321-L328


 - [ ] ID-60
[TradeUtils.isExpired(uint256)](contracts/libraries/TradeUtils.sol#L75-L77) uses timestamp for comparisons
	Dangerous comparisons:
	- [block.timestamp > expiresAt](contracts/libraries/TradeUtils.sol#L76)

contracts/libraries/TradeUtils.sol#L75-L77


 - [ ] ID-61
[PriceOracle._getTokenPriceInUSD(address)](contracts/PriceOracle.sol#L372-L397) uses timestamp for comparisons
	Dangerous comparisons:
	- [cachedPrice.isValid && block.timestamp <= cachedPrice.updatedAt + MAX_PRICE_AGE](contracts/PriceOracle.sol#L375-L376)

contracts/PriceOracle.sol#L372-L397


 - [ ] ID-62
[PriceOracle.getCachedTokenPrice(address)](contracts/PriceOracle.sol#L257-L269) uses timestamp for comparisons
	Dangerous comparisons:
	- [block.timestamp > cachedPrice.updatedAt + MAX_PRICE_AGE](contracts/PriceOracle.sol#L265)

contracts/PriceOracle.sol#L257-L269


 - [ ] ID-63
[ArbitratorManager.isActiveArbitrator(address)](contracts/ArbitratorManager.sol#L458-L465) uses timestamp for comparisons
	Dangerous comparisons:
	- [arbitratorInfo[_arbitrator].isActive && arbitratorInfo[_arbitrator].joinedAt > 0](contracts/ArbitratorManager.sol#L464)

contracts/ArbitratorManager.sol#L458-L465


 - [ ] ID-64
[PriceOracle.getTokenPriceInFiat(address,string,uint256)](contracts/PriceOracle.sol#L278-L291) uses timestamp for comparisons
	Dangerous comparisons:
	- [fiatPriceUSD == 0](contracts/PriceOracle.sol#L286)

contracts/PriceOracle.sol#L278-L291


 - [ ] ID-65
[Profile.canCreateTrade(address)](contracts/Profile.sol#L302-L307) uses timestamp for comparisons
	Dangerous comparisons:
	- [profile.activeTrades < config.maxActiveTrades](contracts/Profile.sol#L306)

contracts/Profile.sol#L302-L307


 - [ ] ID-66
[PriceOracle.getTokenPriceAge(address)](contracts/PriceOracle.sol#L335-L341) uses timestamp for comparisons
	Dangerous comparisons:
	- [block.timestamp > priceData.updatedAt](contracts/PriceOracle.sol#L339-L340)

contracts/PriceOracle.sol#L335-L341


## assembly
Impact: Informational
Confidence: High
 - [ ] ID-67
[SafeCast.toUint(bool)](node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol#L1157-L1161) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol#L1158-L1160)

node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol#L1157-L1161


 - [ ] ID-68
[StorageSlot.getAddressSlot(bytes32)](node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#L66-L70) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#L67-L69)

node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#L66-L70


 - [ ] ID-69
[SlotDerivation.erc7201Slot(string)](node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#L45-L50) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#L46-L49)

node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#L45-L50


 - [ ] ID-70
[Arrays.unsafeAccess(address[],uint256)](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L383-L389) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L385-L387)

node_modules/@openzeppelin/contracts/utils/Arrays.sol#L383-L389


 - [ ] ID-71
[Initializable._getInitializableStorage()](node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol#L232-L237) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol#L234-L236)

node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol#L232-L237


 - [ ] ID-72
[StorageSlot.getUint256Slot(bytes32)](node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#L93-L97) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#L94-L96)

node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#L93-L97


 - [ ] ID-73
[Arrays.unsafeAccess(string[],uint256)](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L435-L441) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L437-L439)

node_modules/@openzeppelin/contracts/utils/Arrays.sol#L435-L441


 - [ ] ID-74
[SafeERC20._callOptionalReturnBool(IERC20,bytes)](node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#L201-L211) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#L205-L209)

node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#L201-L211


 - [ ] ID-75
[EnumerableSet.values(EnumerableSet.UintSet,uint256,uint256)](node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol#L498-L507) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol#L502-L504)

node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol#L498-L507


 - [ ] ID-76
[EnumerableSet.values(EnumerableSet.Bytes32Set,uint256,uint256)](node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol#L294-L303) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol#L298-L300)

node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol#L294-L303


 - [ ] ID-77
[Math.tryModExp(bytes,bytes,bytes)](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L449-L471) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L461-L470)

node_modules/@openzeppelin/contracts/utils/math/Math.sol#L449-L471


 - [ ] ID-78
[Arrays.unsafeAccess(uint256[],uint256)](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L409-L415) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L411-L413)

node_modules/@openzeppelin/contracts/utils/Arrays.sol#L409-L415


 - [ ] ID-79
[SlotDerivation.deriveMapping(bytes32,bool)](node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#L85-L91) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#L86-L90)

node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#L85-L91


 - [ ] ID-80
[SlotDerivation.deriveMapping(bytes32,bytes)](node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#L144-L154) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#L145-L153)

node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#L144-L154


 - [ ] ID-81
[EnumerableSet.values(EnumerableSet.Bytes32Set)](node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol#L275-L284) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol#L279-L281)

node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol#L275-L284


 - [ ] ID-82
[StorageSlot.getBooleanSlot(bytes32)](node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#L75-L79) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#L76-L78)

node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#L75-L79


 - [ ] ID-83
[Arrays.unsafeMemoryAccess(string[],uint256)](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L492-L496) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L493-L495)

node_modules/@openzeppelin/contracts/utils/Arrays.sol#L492-L496


 - [ ] ID-84
[AccessControlUpgradeable._getAccessControlStorage()](node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol#L68-L72) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol#L69-L71)

node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol#L68-L72


 - [ ] ID-85
[StorageSlot.getBytes32Slot(bytes32)](node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#L84-L88) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#L85-L87)

node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#L84-L88


 - [ ] ID-86
[Math.mulDiv(uint256,uint256,uint256)](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L204-L275) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L227-L234)
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L240-L249)

node_modules/@openzeppelin/contracts/utils/math/Math.sol#L204-L275


 - [ ] ID-87
[Arrays.unsafeSetLength(bytes32[],uint256)](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L514-L518) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L515-L517)

node_modules/@openzeppelin/contracts/utils/Arrays.sol#L514-L518


 - [ ] ID-88
[Arrays.unsafeMemoryAccess(bytes[],uint256)](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L481-L485) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L482-L484)

node_modules/@openzeppelin/contracts/utils/Arrays.sol#L481-L485


 - [ ] ID-89
[EnumerableSet.values(EnumerableSet.AddressSet)](node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol#L377-L386) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol#L381-L383)

node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol#L377-L386


 - [ ] ID-90
[Panic.panic(uint256)](node_modules/@openzeppelin/contracts/utils/Panic.sol#L50-L56) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/Panic.sol#L51-L55)

node_modules/@openzeppelin/contracts/utils/Panic.sol#L50-L56


 - [ ] ID-91
[SlotDerivation.deriveMapping(bytes32,address)](node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#L74-L80) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#L75-L79)

node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#L74-L80


 - [ ] ID-92
[Arrays.unsafeAccess(bytes[],uint256)](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L422-L428) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L424-L426)

node_modules/@openzeppelin/contracts/utils/Arrays.sol#L422-L428


 - [ ] ID-93
[Arrays.unsafeAccess(bytes32[],uint256)](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L396-L402) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L398-L400)

node_modules/@openzeppelin/contracts/utils/Arrays.sol#L396-L402


 - [ ] ID-94
[StorageSlot.getInt256Slot(bytes32)](node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#L102-L106) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#L103-L105)

node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#L102-L106


 - [ ] ID-95
[Arrays.unsafeMemoryAccess(bytes32[],uint256)](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L459-L463) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L460-L462)

node_modules/@openzeppelin/contracts/utils/Arrays.sol#L459-L463


 - [ ] ID-96
[Address._revert(bytes)](node_modules/@openzeppelin/contracts/utils/Address.sol#L138-L148) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/Address.sol#L142-L144)

node_modules/@openzeppelin/contracts/utils/Address.sol#L138-L148


 - [ ] ID-97
[EnumerableSet.values(EnumerableSet.AddressSet,uint256,uint256)](node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol#L396-L405) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol#L400-L402)

node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol#L396-L405


 - [ ] ID-98
[StorageSlot.getBytesSlot(bytes)](node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#L138-L142) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#L139-L141)

node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#L138-L142


 - [ ] ID-99
[SlotDerivation.deriveArray(bytes32)](node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#L64-L69) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#L65-L68)

node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#L64-L69


 - [ ] ID-100
[Arrays._castToUint256Array(address[])](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L180-L184) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L181-L183)

node_modules/@openzeppelin/contracts/utils/Arrays.sol#L180-L184


 - [ ] ID-101
[Math.mul512(uint256,uint256)](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L37-L46) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L41-L45)

node_modules/@openzeppelin/contracts/utils/math/Math.sol#L37-L46


 - [ ] ID-102
[Arrays.unsafeSetLength(address[],uint256)](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L503-L507) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L504-L506)

node_modules/@openzeppelin/contracts/utils/Arrays.sol#L503-L507


 - [ ] ID-103
[StorageSlot.getStringSlot(bytes32)](node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#L111-L115) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#L112-L114)

node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#L111-L115


 - [ ] ID-104
[EnumerableSet.values(EnumerableSet.UintSet)](node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol#L479-L488) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol#L483-L485)

node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol#L479-L488


 - [ ] ID-105
[Arrays.unsafeSetLength(string[],uint256)](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L547-L551) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L548-L550)

node_modules/@openzeppelin/contracts/utils/Arrays.sol#L547-L551


 - [ ] ID-106
[Arrays._swap(uint256,uint256)](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L170-L177) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L171-L176)

node_modules/@openzeppelin/contracts/utils/Arrays.sol#L170-L177


 - [ ] ID-107
[SlotDerivation.deriveMapping(bytes32,string)](node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#L129-L139) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#L130-L138)

node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#L129-L139


 - [ ] ID-108
[Arrays._mload(uint256)](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L161-L165) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L162-L164)

node_modules/@openzeppelin/contracts/utils/Arrays.sol#L161-L165


 - [ ] ID-109
[Math.log2(uint256)](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L612-L651) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L648-L650)

node_modules/@openzeppelin/contracts/utils/math/Math.sol#L612-L651


 - [ ] ID-110
[Arrays.unsafeSetLength(uint256[],uint256)](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L525-L529) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L526-L528)

node_modules/@openzeppelin/contracts/utils/Arrays.sol#L525-L529


 - [ ] ID-111
[SlotDerivation.deriveMapping(bytes32,bytes32)](node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#L96-L102) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#L97-L101)

node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#L96-L102


 - [ ] ID-112
[StorageSlot.getStringSlot(string)](node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#L120-L124) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#L121-L123)

node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#L120-L124


 - [ ] ID-113
[Arrays._begin(uint256[])](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L142-L146) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L143-L145)

node_modules/@openzeppelin/contracts/utils/Arrays.sol#L142-L146


 - [ ] ID-114
[ReentrancyGuardUpgradeable._getReentrancyGuardStorage()](node_modules/@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol#L49-L53) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol#L50-L52)

node_modules/@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol#L49-L53


 - [ ] ID-115
[Math.tryMul(uint256,uint256)](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L73-L84) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L76-L80)

node_modules/@openzeppelin/contracts/utils/math/Math.sol#L73-L84


 - [ ] ID-116
[Arrays._castToUint256Comp(function(address,address) returns(bool))](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L194-L200) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L197-L199)

node_modules/@openzeppelin/contracts/utils/Arrays.sol#L194-L200


 - [ ] ID-117
[Math.tryMod(uint256,uint256)](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L102-L110) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L105-L108)

node_modules/@openzeppelin/contracts/utils/math/Math.sol#L102-L110


 - [ ] ID-118
[Math.tryModExp(uint256,uint256,uint256)](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L409-L433) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L411-L432)

node_modules/@openzeppelin/contracts/utils/math/Math.sol#L409-L433


 - [ ] ID-119
[Math.tryDiv(uint256,uint256)](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L89-L97) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L92-L95)

node_modules/@openzeppelin/contracts/utils/math/Math.sol#L89-L97


 - [ ] ID-120
[StorageSlot.getBytesSlot(bytes32)](node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#L129-L133) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#L130-L132)

node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#L129-L133


 - [ ] ID-121
[Arrays.unsafeMemoryAccess(address[],uint256)](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L448-L452) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L449-L451)

node_modules/@openzeppelin/contracts/utils/Arrays.sol#L448-L452


 - [ ] ID-122
[SlotDerivation.deriveMapping(bytes32,uint256)](node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#L107-L113) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#L108-L112)

node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#L107-L113


 - [ ] ID-123
[SafeERC20._callOptionalReturn(IERC20,bytes)](node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#L173-L191) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#L176-L186)

node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#L173-L191


 - [ ] ID-124
[Arrays.unsafeMemoryAccess(uint256[],uint256)](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L470-L474) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L471-L473)

node_modules/@openzeppelin/contracts/utils/Arrays.sol#L470-L474


 - [ ] ID-125
[Arrays.unsafeSetLength(bytes[],uint256)](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L536-L540) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L537-L539)

node_modules/@openzeppelin/contracts/utils/Arrays.sol#L536-L540


 - [ ] ID-126
[SlotDerivation.deriveMapping(bytes32,int256)](node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#L118-L124) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#L119-L123)

node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#L118-L124


 - [ ] ID-127
[Arrays._castToUint256Comp(function(bytes32,bytes32) returns(bool))](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L203-L209) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L206-L208)

node_modules/@openzeppelin/contracts/utils/Arrays.sol#L203-L209


 - [ ] ID-128
[Math.add512(uint256,uint256)](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L25-L30) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L26-L29)

node_modules/@openzeppelin/contracts/utils/math/Math.sol#L25-L30


 - [ ] ID-129
[Arrays._castToUint256Array(bytes32[])](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L187-L191) uses assembly
	- [INLINE ASM](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L188-L190)

node_modules/@openzeppelin/contracts/utils/Arrays.sol#L187-L191


## pragma
Impact: Informational
Confidence: High
 - [ ] ID-130
11 different versions of Solidity are used:
	- Version constraint ^0.8.0 is used by:
		-[^0.8.0](node_modules/@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol#L2)
		-[^0.8.0](node_modules/@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol#L2)
	- Version constraint ^0.8.20 is used by:
		-[^0.8.20](node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol#L4)
		-[^0.8.20](node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol#L4)
		-[^0.8.20](node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol#L4)
		-[^0.8.20](node_modules/@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol#L4)
		-[^0.8.20](node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol#L4)
		-[^0.8.20](node_modules/@openzeppelin/contracts/access/AccessControl.sol#L4)
		-[^0.8.20](node_modules/@openzeppelin/contracts/governance/TimelockController.sol#L4)
		-[^0.8.20](node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol#L4)
		-[^0.8.20](node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol#L4)
		-[^0.8.20](node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#L4)
		-[^0.8.20](node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol#L4)
		-[^0.8.20](node_modules/@openzeppelin/contracts/utils/Address.sol#L4)
		-[^0.8.20](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L5)
		-[^0.8.20](node_modules/@openzeppelin/contracts/utils/Comparators.sol#L4)
		-[^0.8.20](node_modules/@openzeppelin/contracts/utils/Context.sol#L4)
		-[^0.8.20](node_modules/@openzeppelin/contracts/utils/Errors.sol#L4)
		-[^0.8.20](node_modules/@openzeppelin/contracts/utils/Panic.sol#L4)
		-[^0.8.20](node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#L5)
		-[^0.8.20](node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#L5)
		-[^0.8.20](node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol#L4)
		-[^0.8.20](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L4)
		-[^0.8.20](node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol#L5)
		-[^0.8.20](node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol#L5)
	- Version constraint ^0.8.22 is used by:
		-[^0.8.22](node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol#L4)
	- Version constraint >=0.8.4 is used by:
		-[>=0.8.4](node_modules/@openzeppelin/contracts/access/IAccessControl.sol#L4)
		-[>=0.8.4](node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol#L3)
	- Version constraint >=0.6.2 is used by:
		-[>=0.6.2](node_modules/@openzeppelin/contracts/interfaces/IERC1363.sol#L4)
		-[>=0.6.2](node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol#L4)
		-[>=0.6.2](node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol#L4)
	- Version constraint >=0.4.16 is used by:
		-[>=0.4.16](node_modules/@openzeppelin/contracts/interfaces/IERC165.sol#L4)
		-[>=0.4.16](node_modules/@openzeppelin/contracts/interfaces/IERC20.sol#L4)
		-[>=0.4.16](node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol#L4)
		-[>=0.4.16](node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol#L4)
		-[>=0.4.16](node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol#L4)
		-[>=0.4.16](node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol#L4)
	- Version constraint >=0.4.11 is used by:
		-[>=0.4.11](node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol#L4)
	- Version constraint ^0.8.21 is used by:
		-[^0.8.21](node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol#L4)
	- Version constraint >=0.5.0 is used by:
		-[>=0.5.0](node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol#L4)
		-[>=0.5.0](node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol#L2)
		-[>=0.5.0](node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol#L2)
		-[>=0.5.0](node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol#L2)
		-[>=0.5.0](node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol#L2)
		-[>=0.5.0](node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol#L2)
		-[>=0.5.0](node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol#L2)
		-[>=0.5.0](node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol#L2)
		-[>=0.5.0](node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol#L2)
	- Version constraint >=0.7.5 is used by:
		-[>=0.7.5](node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol#L2)
	- Version constraint ^0.8.24 is used by:
		-[^0.8.24](contracts/ArbitratorManager.sol#L2)
		-[^0.8.24](contracts/Escrow.sol#L2)
		-[^0.8.24](contracts/Hub.sol#L2)
		-[^0.8.24](contracts/MockERC20.sol#L2)
		-[^0.8.24](contracts/Offer.sol#L2)
		-[^0.8.24](contracts/PriceOracle.sol#L2)
		-[^0.8.24](contracts/Profile.sol#L2)
		-[^0.8.24](contracts/Trade.sol#L2)
		-[^0.8.24](contracts/interfaces/IArbitratorManager.sol#L2)
		-[^0.8.24](contracts/interfaces/IEscrow.sol#L2)
		-[^0.8.24](contracts/interfaces/IHub.sol#L2)
		-[^0.8.24](contracts/interfaces/ILocalToken.sol#L2)
		-[^0.8.24](contracts/interfaces/IOffer.sol#L2)
		-[^0.8.24](contracts/interfaces/IPriceOracle.sol#L2)
		-[^0.8.24](contracts/interfaces/IProfile.sol#L2)
		-[^0.8.24](contracts/interfaces/ITimelockController.sol#L2)
		-[^0.8.24](contracts/interfaces/ITrade.sol#L2)
		-[^0.8.24](contracts/libraries/FeeCalculations.sol#L2)
		-[^0.8.24](contracts/libraries/TradeUtils.sol#L2)

node_modules/@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol#L2


## cyclomatic-complexity
Impact: Informational
Confidence: High
 - [ ] ID-131
[Offer._updateOfferInternal(uint256,IOffer.OfferState,uint256,uint256,uint256)](contracts/Offer.sol#L180-L239) has a high cyclomatic complexity (12).

contracts/Offer.sol#L180-L239


## solc-version
Impact: Informational
Confidence: High
 - [ ] ID-132
Version constraint ^0.8.20 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- VerbatimInvalidDeduplication
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess.
It is used by:
	- [^0.8.20](node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol#L4)
	- [^0.8.20](node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol#L4)
	- [^0.8.20](node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol#L4)
	- [^0.8.20](node_modules/@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol#L4)
	- [^0.8.20](node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol#L4)
	- [^0.8.20](node_modules/@openzeppelin/contracts/access/AccessControl.sol#L4)
	- [^0.8.20](node_modules/@openzeppelin/contracts/governance/TimelockController.sol#L4)
	- [^0.8.20](node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol#L4)
	- [^0.8.20](node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol#L4)
	- [^0.8.20](node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#L4)
	- [^0.8.20](node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol#L4)
	- [^0.8.20](node_modules/@openzeppelin/contracts/utils/Address.sol#L4)
	- [^0.8.20](node_modules/@openzeppelin/contracts/utils/Arrays.sol#L5)
	- [^0.8.20](node_modules/@openzeppelin/contracts/utils/Comparators.sol#L4)
	- [^0.8.20](node_modules/@openzeppelin/contracts/utils/Context.sol#L4)
	- [^0.8.20](node_modules/@openzeppelin/contracts/utils/Errors.sol#L4)
	- [^0.8.20](node_modules/@openzeppelin/contracts/utils/Panic.sol#L4)
	- [^0.8.20](node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol#L5)
	- [^0.8.20](node_modules/@openzeppelin/contracts/utils/StorageSlot.sol#L5)
	- [^0.8.20](node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol#L4)
	- [^0.8.20](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L4)
	- [^0.8.20](node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol#L5)
	- [^0.8.20](node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol#L5)

node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol#L4


 - [ ] ID-133
Version constraint ^0.8.22 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- VerbatimInvalidDeduplication.
It is used by:
	- [^0.8.22](node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol#L4)

node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol#L4


 - [ ] ID-134
Version constraint >=0.4.11 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- UninitializedFunctionPointerInConstructor_0.4.x
	- IncorrectEventSignatureInLibraries_0.4.x
	- ExpExponentCleanup
	- NestedArrayFunctionCallDecoder
	- ZeroFunctionSelector
	- DelegateCallReturnValue
	- ECRecoverMalformedInput
	- SkipEmptyStringLiteral.
It is used by:
	- [>=0.4.11](node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol#L4)

node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol#L4


 - [ ] ID-135
Version constraint >=0.7.5 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- DataLocationChangeInInternalOverride
	- NestedCalldataArrayAbiReencodingSizeValidation
	- SignedImmutables
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching.
It is used by:
	- [>=0.7.5](node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol#L2)

node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol#L2


 - [ ] ID-136
Version constraint >=0.4.16 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- ABIEncoderV2StorageArrayWithMultiSlotElement
	- DynamicConstructorArgumentsClippedABIV2
	- UninitializedFunctionPointerInConstructor_0.4.x
	- IncorrectEventSignatureInLibraries_0.4.x
	- ExpExponentCleanup
	- NestedArrayFunctionCallDecoder
	- ZeroFunctionSelector.
It is used by:
	- [>=0.4.16](node_modules/@openzeppelin/contracts/interfaces/IERC165.sol#L4)
	- [>=0.4.16](node_modules/@openzeppelin/contracts/interfaces/IERC20.sol#L4)
	- [>=0.4.16](node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol#L4)
	- [>=0.4.16](node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol#L4)
	- [>=0.4.16](node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol#L4)
	- [>=0.4.16](node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol#L4)

node_modules/@openzeppelin/contracts/interfaces/IERC165.sol#L4


 - [ ] ID-137
Version constraint >=0.5.0 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- ABIEncoderV2StorageArrayWithMultiSlotElement
	- DynamicConstructorArgumentsClippedABIV2
	- UninitializedFunctionPointerInConstructor
	- IncorrectEventSignatureInLibraries
	- ABIEncoderV2PackedStorage.
It is used by:
	- [>=0.5.0](node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol#L4)
	- [>=0.5.0](node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol#L2)
	- [>=0.5.0](node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol#L2)
	- [>=0.5.0](node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol#L2)
	- [>=0.5.0](node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol#L2)
	- [>=0.5.0](node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol#L2)
	- [>=0.5.0](node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol#L2)
	- [>=0.5.0](node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol#L2)
	- [>=0.5.0](node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol#L2)

node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol#L4


 - [ ] ID-138
Version constraint ^0.8.21 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- VerbatimInvalidDeduplication.
It is used by:
	- [^0.8.21](node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol#L4)

node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol#L4


 - [ ] ID-139
Version constraint ^0.8.0 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- DataLocationChangeInInternalOverride
	- NestedCalldataArrayAbiReencodingSizeValidation
	- SignedImmutables
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching.
It is used by:
	- [^0.8.0](node_modules/@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol#L2)
	- [^0.8.0](node_modules/@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol#L2)

node_modules/@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol#L2


 - [ ] ID-140
Version constraint >=0.8.4 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- DataLocationChangeInInternalOverride
	- NestedCalldataArrayAbiReencodingSizeValidation
	- SignedImmutables.
It is used by:
	- [>=0.8.4](node_modules/@openzeppelin/contracts/access/IAccessControl.sol#L4)
	- [>=0.8.4](node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol#L3)

node_modules/@openzeppelin/contracts/access/IAccessControl.sol#L4


 - [ ] ID-141
Version constraint >=0.6.2 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- NestedCalldataArrayAbiReencodingSizeValidation
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- MissingEscapingInFormatting
	- ArraySliceDynamicallyEncodedBaseType
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow.
It is used by:
	- [>=0.6.2](node_modules/@openzeppelin/contracts/interfaces/IERC1363.sol#L4)
	- [>=0.6.2](node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol#L4)
	- [>=0.6.2](node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol#L4)

node_modules/@openzeppelin/contracts/interfaces/IERC1363.sol#L4


## low-level-calls
Impact: Informational
Confidence: High
 - [ ] ID-142
Low level call in [Address.functionStaticCall(address,bytes)](node_modules/@openzeppelin/contracts/utils/Address.sol#L87-L90):
	- [(success,returndata) = target.staticcall(data)](node_modules/@openzeppelin/contracts/utils/Address.sol#L88)

node_modules/@openzeppelin/contracts/utils/Address.sol#L87-L90


 - [ ] ID-143
Low level call in [Address.functionDelegateCall(address,bytes)](node_modules/@openzeppelin/contracts/utils/Address.sol#L96-L99):
	- [(success,returndata) = target.delegatecall(data)](node_modules/@openzeppelin/contracts/utils/Address.sol#L97)

node_modules/@openzeppelin/contracts/utils/Address.sol#L96-L99


 - [ ] ID-144
Low level call in [Escrow._safeTransfer(address,address,uint256)](contracts/Escrow.sol#L208-L223):
	- [(success,None) = to.call{gas: 2300,value: amount}()](contracts/Escrow.sol#L213)
	- [(success,None) = to.call{value: amount}()](contracts/Escrow.sol#L216)

contracts/Escrow.sol#L208-L223


 - [ ] ID-145
Low level call in [Address.functionCallWithValue(address,bytes,uint256)](node_modules/@openzeppelin/contracts/utils/Address.sol#L75-L81):
	- [(success,returndata) = target.call{value: value}(data)](node_modules/@openzeppelin/contracts/utils/Address.sol#L79)

node_modules/@openzeppelin/contracts/utils/Address.sol#L75-L81


 - [ ] ID-146
Low level call in [Address.sendValue(address,uint256)](node_modules/@openzeppelin/contracts/utils/Address.sol#L33-L42):
	- [(success,returndata) = recipient.call{value: amount}()](node_modules/@openzeppelin/contracts/utils/Address.sol#L38)

node_modules/@openzeppelin/contracts/utils/Address.sol#L33-L42


 - [ ] ID-147
Low level call in [TimelockController._execute(address,uint256,bytes)](node_modules/@openzeppelin/contracts/governance/TimelockController.sol#L411-L414):
	- [(success,returndata) = target.call{value: value}(data)](node_modules/@openzeppelin/contracts/governance/TimelockController.sol#L412)

node_modules/@openzeppelin/contracts/governance/TimelockController.sol#L411-L414


## missing-inheritance
Impact: Informational
Confidence: High
 - [ ] ID-148
[TimelockController](node_modules/@openzeppelin/contracts/governance/TimelockController.sol#L25-L471) should inherit from [ITimelockController](contracts/interfaces/ITimelockController.sol#L10-L113)

node_modules/@openzeppelin/contracts/governance/TimelockController.sol#L25-L471


## naming-convention
Impact: Informational
Confidence: High
 - [ ] ID-149
Parameter [ArbitratorManager.assignArbitrator(uint256,string)._tradeId](contracts/ArbitratorManager.sol#L179) is not in mixedCase

contracts/ArbitratorManager.sol#L179


 - [ ] ID-150
Parameter [Hub.initialize(IHub.HubConfig,uint256)._minDelay](contracts/Hub.sol#L93) is not in mixedCase

contracts/Hub.sol#L93


 - [ ] ID-151
Parameter [Trade.initialize(address,address,address,address,address)._escrowContract](contracts/Trade.sol#L141) is not in mixedCase

contracts/Trade.sol#L141


 - [ ] ID-152
Parameter [Trade.fundEscrow(uint256)._tradeId](contracts/Trade.sol#L283) is not in mixedCase

contracts/Trade.sol#L283


 - [ ] ID-153
Parameter [PriceOracle.setEmergencyPause(bool)._paused](contracts/PriceOracle.sol#L347) is not in mixedCase

contracts/PriceOracle.sol#L347


 - [ ] ID-154
Parameter [Hub.unpauseOperation(bytes32)._operation](contracts/Hub.sol#L220) is not in mixedCase

contracts/Hub.sol#L220


 - [ ] ID-155
Constant [AccessControlUpgradeable.AccessControlStorageLocation](node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol#L66) is not in UPPER_CASE_WITH_UNDERSCORES

node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol#L66


 - [ ] ID-156
Parameter [ArbitratorManager.updateVRFSubscription(uint64)._subscriptionId](contracts/ArbitratorManager.sol#L414) is not in mixedCase

contracts/ArbitratorManager.sol#L414


 - [ ] ID-157
Parameter [Offer.getOffersByType(IOffer.OfferType,string,address,uint256,uint256)._token](contracts/Offer.sol#L297) is not in mixedCase

contracts/Offer.sol#L297


 - [ ] ID-158
Parameter [ArbitratorManager.configureVRF(address,uint64,bytes32,uint32,uint16)._requestConfirmations](contracts/ArbitratorManager.sol#L395) is not in mixedCase

contracts/ArbitratorManager.sol#L395


 - [ ] ID-159
Parameter [Offer.getOffersByType(IOffer.OfferType,string,address,uint256,uint256)._type](contracts/Offer.sol#L295) is not in mixedCase

contracts/Offer.sol#L295


 - [ ] ID-160
Parameter [ArbitratorManager.getActiveArbitratorCountForCurrency(string)._currency](contracts/ArbitratorManager.sol#L495) is not in mixedCase

contracts/ArbitratorManager.sol#L495


 - [ ] ID-161
Parameter [Offer.getUserOffers(address)._user](contracts/Offer.sol#L375) is not in mixedCase

contracts/Offer.sol#L375


 - [ ] ID-162
Parameter [Offer.getUserActiveOfferCount(address)._user](contracts/Offer.sol#L71) is not in mixedCase

contracts/Offer.sol#L71


 - [ ] ID-163
Parameter [Offer.getOffersByType(IOffer.OfferType,string,address,uint256,uint256)._fiatCurrency](contracts/Offer.sol#L296) is not in mixedCase

contracts/Offer.sol#L296


 - [ ] ID-164
Parameter [Trade.releaseEscrow(uint256)._tradeId](contracts/Trade.sol#L350) is not in mixedCase

contracts/Trade.sol#L350


 - [ ] ID-165
Parameter [PriceOracle.initialize(address,address)._swapRouter](contracts/PriceOracle.sol#L131) is not in mixedCase

contracts/PriceOracle.sol#L131


 - [ ] ID-166
Parameter [PriceOracle.updateChainlinkFeed(string,address,uint8,uint256)._feedAddress](contracts/PriceOracle.sol#L221) is not in mixedCase

contracts/PriceOracle.sol#L221


 - [ ] ID-167
Parameter [Offer.createOffer(IOffer.OfferType,string,address,uint256,uint256,uint256,string)._token](contracts/Offer.sol#L98) is not in mixedCase

contracts/Offer.sol#L98


 - [ ] ID-168
Parameter [PriceOracle.updatePrices(string[],uint256[])._prices](contracts/PriceOracle.sol#L521) is not in mixedCase

contracts/PriceOracle.sol#L521


 - [ ] ID-169
Function [AccessControlUpgradeable.__AccessControl_init_unchained()](node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol#L86-L87) is not in mixedCase

node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol#L86-L87


 - [ ] ID-170
Parameter [Offer.createOffer(IOffer.OfferType,string,address,uint256,uint256,uint256,string)._rate](contracts/Offer.sol#L101) is not in mixedCase

contracts/Offer.sol#L101


 - [ ] ID-171
Parameter [Trade.disputeTrade(uint256,string)._tradeId](contracts/Trade.sol#L459) is not in mixedCase

contracts/Trade.sol#L459


 - [ ] ID-172
Parameter [Profile.updateActiveTrades(address,int256)._delta](contracts/Profile.sol#L198) is not in mixedCase

contracts/Profile.sol#L198


 - [ ] ID-173
Parameter [Offer.pauseOffer(uint256)._offerId](contracts/Offer.sol#L245) is not in mixedCase

contracts/Offer.sol#L245


 - [ ] ID-174
Parameter [Hub.isContractPaused(address)._contract](contracts/Hub.sol#L358) is not in mixedCase

contracts/Hub.sol#L358


 - [ ] ID-175
Parameter [ArbitratorManager.getArbitratorsForCurrency(string)._currency](contracts/ArbitratorManager.sol#L444) is not in mixedCase

contracts/ArbitratorManager.sol#L444


 - [ ] ID-176
Parameter [Escrow.initialize(address,address,address)._tradeContract](contracts/Escrow.sol#L77) is not in mixedCase

contracts/Escrow.sol#L77


 - [ ] ID-177
Parameter [PriceOracle.updateChainlinkFeed(string,address,uint8,uint256)._decimals](contracts/PriceOracle.sol#L222) is not in mixedCase

contracts/PriceOracle.sol#L222


 - [ ] ID-178
Parameter [ArbitratorManager.configureVRF(address,uint64,bytes32,uint32,uint16)._vrfCoordinator](contracts/ArbitratorManager.sol#L391) is not in mixedCase

contracts/ArbitratorManager.sol#L391


 - [ ] ID-179
Parameter [Escrow.initialize(address,address,address)._hub](contracts/Escrow.sol#L75) is not in mixedCase

contracts/Escrow.sol#L75


 - [ ] ID-180
Function [ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained()](node_modules/@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol#L64-L67) is not in mixedCase

node_modules/@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol#L64-L67


 - [ ] ID-181
Parameter [PriceOracle.updateTokenRoute(address,IPriceOracle.TokenRoute)._token](contracts/PriceOracle.sol#L528) is not in mixedCase

contracts/PriceOracle.sol#L528


 - [ ] ID-182
Parameter [Profile.updateActiveTrades(address,int256)._user](contracts/Profile.sol#L197) is not in mixedCase

contracts/Profile.sol#L197


 - [ ] ID-183
Parameter [Offer.updateOfferState(uint256,IOffer.OfferState)._offerId](contracts/Offer.sol#L384) is not in mixedCase

contracts/Offer.sol#L384


 - [ ] ID-184
Variable [Hub.__gap](contracts/Hub.sol#L57) is not in mixedCase

contracts/Hub.sol#L57


 - [ ] ID-185
Parameter [Hub.enhancedEmergencyPause(string,uint256)._extendedTimeout](contracts/Hub.sol#L248) is not in mixedCase

contracts/Hub.sol#L248


 - [ ] ID-186
Parameter [Offer.updateOffer(uint256,IOffer.OfferState,uint256,uint256,uint256)._offerId](contracts/Offer.sol#L163) is not in mixedCase

contracts/Offer.sol#L163


 - [ ] ID-187
Parameter [ArbitratorManager.configureVRF(address,uint64,bytes32,uint32,uint16)._keyHash](contracts/ArbitratorManager.sol#L393) is not in mixedCase

contracts/ArbitratorManager.sol#L393


 - [ ] ID-188
Parameter [PriceOracle.updatePrices(string[],uint256[])._currencies](contracts/PriceOracle.sol#L521) is not in mixedCase

contracts/PriceOracle.sol#L521


 - [ ] ID-189
Parameter [Trade.initialize(address,address,address,address,address)._profileContract](contracts/Trade.sol#L140) is not in mixedCase

contracts/Trade.sol#L140


 - [ ] ID-190
Parameter [Profile.canCreateOffer(address)._user](contracts/Profile.sol#L290) is not in mixedCase

contracts/Profile.sol#L290


 - [ ] ID-191
Parameter [ArbitratorManager.configureVRF(address,uint64,bytes32,uint32,uint16)._callbackGasLimit](contracts/ArbitratorManager.sol#L394) is not in mixedCase

contracts/ArbitratorManager.sol#L394


 - [ ] ID-192
Variable [Escrow.__gap](contracts/Escrow.sol#L61) is not in mixedCase

contracts/Escrow.sol#L61


 - [ ] ID-193
Variable [PriceOracle.__gap](contracts/PriceOracle.sol#L78) is not in mixedCase

contracts/PriceOracle.sol#L78


 - [ ] ID-194
Parameter [Profile.canCreateTrade(address)._user](contracts/Profile.sol#L302) is not in mixedCase

contracts/Profile.sol#L302


 - [ ] ID-195
Parameter [Profile.getTradingStats(address)._user](contracts/Profile.sol#L254) is not in mixedCase

contracts/Profile.sol#L254


 - [ ] ID-196
Parameter [Offer.updateOffer(uint256,IOffer.OfferState,uint256,uint256,uint256)._newState](contracts/Offer.sol#L164) is not in mixedCase

contracts/Offer.sol#L164


 - [ ] ID-197
Parameter [Offer.createOffer(IOffer.OfferType,string,address,uint256,uint256,uint256,string)._minAmount](contracts/Offer.sol#L99) is not in mixedCase

contracts/Offer.sol#L99


 - [ ] ID-198
Parameter [PriceOracle.getTokenPriceInUSD(address)._token](contracts/PriceOracle.sol#L242) is not in mixedCase

contracts/PriceOracle.sol#L242


 - [ ] ID-199
Parameter [Hub.pauseContract(address,bool)._contract](contracts/Hub.sol#L234) is not in mixedCase

contracts/Hub.sol#L234


 - [ ] ID-200
Parameter [PriceOracle.registerPriceRoute(address,address[],uint24[],address,uint32)._path](contracts/PriceOracle.sol#L189) is not in mixedCase

contracts/PriceOracle.sol#L189


 - [ ] ID-201
Parameter [Trade.createTrade(uint256,uint256,string)._buyerContact](contracts/Trade.sol#L171) is not in mixedCase

contracts/Trade.sol#L171


 - [ ] ID-202
Parameter [ArbitratorManager.assignArbitrator(uint256,string)._fiatCurrency](contracts/ArbitratorManager.sol#L180) is not in mixedCase

contracts/ArbitratorManager.sol#L180


 - [ ] ID-203
Parameter [Trade.cancelTrade(uint256)._tradeId](contracts/Trade.sol#L386) is not in mixedCase

contracts/Trade.sol#L386


 - [ ] ID-204
Parameter [Trade.initialize(address,address,address,address,address)._hub](contracts/Trade.sol#L138) is not in mixedCase

contracts/Trade.sol#L138


 - [ ] ID-205
Parameter [Hub.enhancedEmergencyPause(string,uint256)._reason](contracts/Hub.sol#L248) is not in mixedCase

contracts/Hub.sol#L248


 - [ ] ID-206
Parameter [Hub.updateAdmin(address)._newAdmin](contracts/Hub.sol#L149) is not in mixedCase

contracts/Hub.sol#L149


 - [ ] ID-207
Parameter [ArbitratorManager.configureVRF(address,uint64,bytes32,uint32,uint16)._subscriptionId](contracts/ArbitratorManager.sol#L392) is not in mixedCase

contracts/ArbitratorManager.sol#L392


 - [ ] ID-208
Parameter [Trade.resolveDispute(uint256,address)._tradeId](contracts/Trade.sol#L553) is not in mixedCase

contracts/Trade.sol#L553


 - [ ] ID-209
Parameter [Profile.updateContact(string,string)._publicKey](contracts/Profile.sol#L100) is not in mixedCase

contracts/Profile.sol#L100


 - [ ] ID-210
Parameter [Trade.acceptTrade(uint256,string)._sellerContact](contracts/Trade.sol#L248) is not in mixedCase

contracts/Trade.sol#L248


 - [ ] ID-211
Parameter [Trade.getDisputeInfo(uint256)._tradeId](contracts/Trade.sol#L610) is not in mixedCase

contracts/Trade.sol#L610


 - [ ] ID-212
Parameter [Profile.updateActiveOffers(address,int256)._user](contracts/Profile.sol#L159) is not in mixedCase

contracts/Profile.sol#L159


 - [ ] ID-213
Parameter [Trade.resolveDispute(uint256,address)._winner](contracts/Trade.sol#L553) is not in mixedCase

contracts/Trade.sol#L553


 - [ ] ID-214
Parameter [Offer.getUserOffers(address,uint256,uint256)._user](contracts/Offer.sol#L333) is not in mixedCase

contracts/Offer.sol#L333


 - [ ] ID-215
Parameter [Offer.updateOffer(uint256,IOffer.OfferState,uint256,uint256,uint256)._newRate](contracts/Offer.sol#L165) is not in mixedCase

contracts/Offer.sol#L165


 - [ ] ID-216
Parameter [Trade.calculateFees(uint256)._amount](contracts/Trade.sol#L635) is not in mixedCase

contracts/Trade.sol#L635


 - [ ] ID-217
Parameter [ArbitratorManager.arbitratorSupportsCurrency(address,string)._arbitrator](contracts/ArbitratorManager.sol#L474) is not in mixedCase

contracts/ArbitratorManager.sol#L474


 - [ ] ID-218
Parameter [Trade.markFiatDeposited(uint256)._tradeId](contracts/Trade.sol#L326) is not in mixedCase

contracts/Trade.sol#L326


 - [ ] ID-219
Parameter [ArbitratorManager.rawFulfillRandomWords(uint256,uint256[])._randomWords](contracts/ArbitratorManager.sol#L298) is not in mixedCase

contracts/ArbitratorManager.sol#L298


 - [ ] ID-220
Parameter [Trade.createTrade(uint256,uint256,string)._offerId](contracts/Trade.sol#L169) is not in mixedCase

contracts/Trade.sol#L169


 - [ ] ID-221
Parameter [Profile.updateTradeCount(address,bool)._user](contracts/Profile.sol#L131) is not in mixedCase

contracts/Profile.sol#L131


 - [ ] ID-222
. analyzed (68 contracts with 100 detectors), 328 result(s) found
INFO:Slither:./audit-artifacts/sarif.json exists already, the overwrite is prevented
Parameter [Profile.updateTradeCount(address,bool)._completed](contracts/Profile.sol#L132) is not in mixedCase

contracts/Profile.sol#L132


 - [ ] ID-223
Parameter [PriceOracle.isPriceValid(string)._currency](contracts/PriceOracle.sol#L548) is not in mixedCase

contracts/PriceOracle.sol#L548


 - [ ] ID-224
Parameter [PriceOracle._getChainlinkPrice(address)._feedAddress](contracts/PriceOracle.sol#L404) is not in mixedCase

contracts/PriceOracle.sol#L404


 - [ ] ID-225
Variable [ArbitratorManager.__gap](contracts/ArbitratorManager.sol#L46) is not in mixedCase

contracts/ArbitratorManager.sol#L46


 - [ ] ID-226
Parameter [PriceOracle.updateFiatPrices(string[],uint256[])._currencies](contracts/PriceOracle.sol#L158) is not in mixedCase

contracts/PriceOracle.sol#L158


 - [ ] ID-227
Parameter [PriceOracle.updateSwapRouter(address)._newRouter](contracts/PriceOracle.sol#L356) is not in mixedCase

contracts/PriceOracle.sol#L356


 - [ ] ID-228
Function [ReentrancyGuardUpgradeable.__ReentrancyGuard_init()](node_modules/@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol#L60-L62) is not in mixedCase

node_modules/@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol#L60-L62


 - [ ] ID-229
Parameter [Trade.createTrade(uint256,uint256,string)._amount](contracts/Trade.sol#L170) is not in mixedCase

contracts/Trade.sol#L170


 - [ ] ID-230
Parameter [Offer.updateOffer(uint256,IOffer.OfferState,uint256,uint256,uint256)._newMax](contracts/Offer.sol#L167) is not in mixedCase

contracts/Offer.sol#L167


 - [ ] ID-231
Parameter [Trade.acceptTrade(uint256,string)._tradeId](contracts/Trade.sol#L247) is not in mixedCase

contracts/Trade.sol#L247


 - [ ] ID-232
Parameter [PriceOracle.checkCircuitBreaker(address,uint256)._currentPrice](contracts/PriceOracle.sol#L572) is not in mixedCase

contracts/PriceOracle.sol#L572


 - [ ] ID-233
Parameter [Offer.archiveOffer(uint256)._offerId](contracts/Offer.sol#L261) is not in mixedCase

contracts/Offer.sol#L261


 - [ ] ID-234
Function [ERC165Upgradeable.__ERC165_init_unchained()](node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol#L25-L26) is not in mixedCase

node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol#L25-L26


 - [ ] ID-235
Function [ContextUpgradeable.__Context_init_unchained()](node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol#L21-L22) is not in mixedCase

node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol#L21-L22


 - [ ] ID-236
Parameter [Profile.getProfile(address)._user](contracts/Profile.sol#L233) is not in mixedCase

contracts/Profile.sol#L233


 - [ ] ID-237
Parameter [Hub.setTimelockController(address)._newTimelock](contracts/Hub.sol#L526) is not in mixedCase

contracts/Hub.sol#L526


 - [ ] ID-238
Parameter [PriceOracle.checkCircuitBreaker(address,uint256)._token](contracts/PriceOracle.sol#L572) is not in mixedCase

contracts/PriceOracle.sol#L572


 - [ ] ID-239
Parameter [PriceOracle.getPriceAge(string)._currency](contracts/PriceOracle.sol#L557) is not in mixedCase

contracts/PriceOracle.sol#L557


 - [ ] ID-240
Parameter [PriceOracle.updateTokenRoute(address,IPriceOracle.TokenRoute)._route](contracts/PriceOracle.sol#L528) is not in mixedCase

contracts/PriceOracle.sol#L528


 - [ ] ID-241
Parameter [Offer.updateOffer(uint256,IOffer.OfferState,uint256,uint256,uint256)._newMin](contracts/Offer.sol#L166) is not in mixedCase

contracts/Offer.sol#L166


 - [ ] ID-242
Parameter [Profile.profileExists(address)._user](contracts/Profile.sol#L242) is not in mixedCase

contracts/Profile.sol#L242


 - [ ] ID-243
Parameter [Trade.initialize(address,address,address,address,address)._offerContract](contracts/Trade.sol#L139) is not in mixedCase

contracts/Trade.sol#L139


 - [ ] ID-244
Parameter [PriceOracle.getCachedTokenPrice(address)._token](contracts/PriceOracle.sol#L257) is not in mixedCase

contracts/PriceOracle.sol#L257


 - [ ] ID-245
Parameter [ArbitratorManager.arbitratorSupportsCurrency(address,string)._currency](contracts/ArbitratorManager.sol#L475) is not in mixedCase

contracts/ArbitratorManager.sol#L475


 - [ ] ID-246
Function [UUPSUpgradeable.__UUPSUpgradeable_init_unchained()](node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol#L68-L69) is not in mixedCase

node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol#L68-L69


 - [ ] ID-247
Parameter [PriceOracle.getTokenPriceAge(address)._token](contracts/PriceOracle.sol#L335) is not in mixedCase

contracts/PriceOracle.sol#L335


 - [ ] ID-248
Parameter [ArbitratorManager.registerArbitrator(string[],string)._supportedCurrencies](contracts/ArbitratorManager.sol#L83) is not in mixedCase

contracts/ArbitratorManager.sol#L83


 - [ ] ID-249
Parameter [Hub.batchCheckOperationsPaused(bytes32[])._operations](contracts/Hub.sol#L376) is not in mixedCase

contracts/Hub.sol#L376


 - [ ] ID-250
Parameter [Offer.getOffer(uint256)._offerId](contracts/Offer.sol#L364) is not in mixedCase

contracts/Offer.sol#L364


 - [ ] ID-251
Parameter [PriceOracle.updateChainlinkFeed(string,address,uint8,uint256)._heartbeat](contracts/PriceOracle.sol#L223) is not in mixedCase

contracts/PriceOracle.sol#L223


 - [ ] ID-252
Parameter [Trade.disputeTrade(uint256,string)._reason](contracts/Trade.sol#L459) is not in mixedCase

contracts/Trade.sol#L459


 - [ ] ID-253
Parameter [ArbitratorManager.updateArbitratorReputation(address,bool)._arbitrator](contracts/ArbitratorManager.sol#L359) is not in mixedCase

contracts/ArbitratorManager.sol#L359


 - [ ] ID-254
Parameter [PriceOracle.resetCircuitBreaker(address)._token](contracts/PriceOracle.sol#L606) is not in mixedCase

contracts/PriceOracle.sol#L606


 - [ ] ID-255
Parameter [Hub.pauseContract(address,bool)._paused](contracts/Hub.sol#L234) is not in mixedCase

contracts/Hub.sol#L234


 - [ ] ID-256
Parameter [Profile.updateContact(string,string)._contact](contracts/Profile.sol#L99) is not in mixedCase

contracts/Profile.sol#L99


 - [ ] ID-257
Parameter [PriceOracle.updateFiatPrices(string[],uint256[])._prices](contracts/PriceOracle.sol#L159) is not in mixedCase

contracts/PriceOracle.sol#L159


 - [ ] ID-258
Parameter [Trade.initialize(address,address,address,address,address)._arbitratorManager](contracts/Trade.sol#L142) is not in mixedCase

contracts/Trade.sol#L142


 - [ ] ID-259
Parameter [ArbitratorManager.getArbitratorInfo(address)._arbitrator](contracts/ArbitratorManager.sol#L430) is not in mixedCase

contracts/ArbitratorManager.sol#L430


 - [ ] ID-260
Function [AccessControlUpgradeable.__AccessControl_init()](node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol#L83-L84) is not in mixedCase

node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol#L83-L84


 - [ ] ID-261
Parameter [Hub.initialize(IHub.HubConfig,uint256)._initialConfig](contracts/Hub.sol#L92) is not in mixedCase

contracts/Hub.sol#L92


 - [ ] ID-262
Parameter [ArbitratorManager.rawFulfillRandomWords(uint256,uint256[])._requestId](contracts/ArbitratorManager.sol#L297) is not in mixedCase

contracts/ArbitratorManager.sol#L297


 - [ ] ID-263
Parameter [ArbitratorManager.deactivateArbitrator(address)._arbitrator](contracts/ArbitratorManager.sol#L159) is not in mixedCase

contracts/ArbitratorManager.sol#L159


 - [ ] ID-264
Parameter [Offer.createOffer(IOffer.OfferType,string,address,uint256,uint256,uint256,string)._fiatCurrency](contracts/Offer.sol#L97) is not in mixedCase

contracts/Offer.sol#L97


 - [ ] ID-265
Parameter [ArbitratorManager.removeArbitratorFromCurrency(address,string)._currency](contracts/ArbitratorManager.sol#L123) is not in mixedCase

contracts/ArbitratorManager.sol#L123


 - [ ] ID-266
Parameter [PriceOracle.getTokenPriceInFiat(address,string,uint256)._token](contracts/PriceOracle.sol#L279) is not in mixedCase

contracts/PriceOracle.sol#L279


 - [ ] ID-267
Parameter [PriceOracle.registerPriceRoute(address,address[],uint24[],address,uint32)._chainlinkFeed](contracts/PriceOracle.sol#L191) is not in mixedCase

contracts/PriceOracle.sol#L191


 - [ ] ID-268
Function [PriceOracle._getChainlinkPrice(address)](contracts/PriceOracle.sol#L404-L424) is not in mixedCase

contracts/PriceOracle.sol#L404-L424


 - [ ] ID-269
Parameter [Offer.getUserOffers(address,uint256,uint256)._limit](contracts/Offer.sol#L335) is not in mixedCase

contracts/Offer.sol#L335


 - [ ] ID-270
Parameter [PriceOracle.initialize(address,address)._admin](contracts/PriceOracle.sol#L130) is not in mixedCase

contracts/PriceOracle.sol#L130


 - [ ] ID-271
Parameter [ArbitratorManager.initialize(address,address)._hub](contracts/ArbitratorManager.sol#L59) is not in mixedCase

contracts/ArbitratorManager.sol#L59


 - [ ] ID-272
Parameter [PriceOracle.getTokenPriceInFiat(address,string,uint256)._amount](contracts/PriceOracle.sol#L281) is not in mixedCase

contracts/PriceOracle.sol#L281


 - [ ] ID-273
Parameter [PriceOracle.getTokenPriceInFiat(address,string,uint256)._fiatCurrency](contracts/PriceOracle.sol#L280) is not in mixedCase

contracts/PriceOracle.sol#L280


 - [ ] ID-274
Parameter [Offer.createOffer(IOffer.OfferType,string,address,uint256,uint256,uint256,string)._description](contracts/Offer.sol#L102) is not in mixedCase

contracts/Offer.sol#L102


 - [ ] ID-275
Parameter [Offer.initialize(address)._hub](contracts/Offer.sol#L57) is not in mixedCase

contracts/Offer.sol#L57


 - [ ] ID-276
Variable [UUPSUpgradeable.__self](node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol#L22) is not in mixedCase

node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol#L22


 - [ ] ID-277
Parameter [PriceOracle.isTokenPriceValid(address)._token](contracts/PriceOracle.sol#L321) is not in mixedCase

contracts/PriceOracle.sol#L321


 - [ ] ID-278
Parameter [Profile.updateHub(address)._newHub](contracts/Profile.sol#L313) is not in mixedCase

contracts/Profile.sol#L313


 - [ ] ID-279
Variable [Trade.__gap](contracts/Trade.sol#L40) is not in mixedCase

contracts/Trade.sol#L40


 - [ ] ID-280
Parameter [Hub.updateConfig(IHub.HubConfig)._newConfig](contracts/Hub.sol#L135) is not in mixedCase

contracts/Hub.sol#L135


 - [ ] ID-281
Variable [Profile.__gap](contracts/Profile.sol#L36) is not in mixedCase

contracts/Profile.sol#L36


 - [ ] ID-282
Function [UUPSUpgradeable.__UUPSUpgradeable_init()](node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol#L65-L66) is not in mixedCase

node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol#L65-L66


 - [ ] ID-283
Parameter [Trade.refundExpiredTrade(uint256)._tradeId](contracts/Trade.sol#L424) is not in mixedCase

contracts/Trade.sol#L424


 - [ ] ID-284
Parameter [PriceOracle.registerPriceRoute(address,address[],uint24[],address,uint32)._twapPeriod](contracts/PriceOracle.sol#L192) is not in mixedCase

contracts/PriceOracle.sol#L192


 - [ ] ID-285
Parameter [ArbitratorManager.registerArbitrator(string[],string)._encryptionKey](contracts/ArbitratorManager.sol#L84) is not in mixedCase

contracts/ArbitratorManager.sol#L84


 - [ ] ID-286
Parameter [Hub.isOperationPaused(bytes32)._operation](contracts/Hub.sol#L349) is not in mixedCase

contracts/Hub.sol#L349


 - [ ] ID-287
Parameter [Profile.updateActiveOffers(address,int256)._delta](contracts/Profile.sol#L160) is not in mixedCase

contracts/Profile.sol#L160


 - [ ] ID-288
Parameter [Offer.createOffer(IOffer.OfferType,string,address,uint256,uint256,uint256,string)._type](contracts/Offer.sol#L96) is not in mixedCase

contracts/Offer.sol#L96


 - [ ] ID-289
Parameter [Hub.pauseOperation(bytes32)._operation](contracts/Hub.sol#L207) is not in mixedCase

contracts/Hub.sol#L207


 - [ ] ID-290
Parameter [ArbitratorManager.getPendingArbitratorAssignment(uint256)._tradeId](contracts/ArbitratorManager.sol#L514) is not in mixedCase

contracts/ArbitratorManager.sol#L514


 - [ ] ID-291
Parameter [Escrow.initialize(address,address,address)._priceOracle](contracts/Escrow.sol#L76) is not in mixedCase

contracts/Escrow.sol#L76


 - [ ] ID-292
Parameter [PriceOracle.setCircuitBreakerDeviation(uint256)._newDeviationBps](contracts/PriceOracle.sol#L626) is not in mixedCase

contracts/PriceOracle.sol#L626


 - [ ] ID-293
Parameter [Offer.getOffersByType(IOffer.OfferType,string,address,uint256,uint256)._offset](contracts/Offer.sol#L298) is not in mixedCase

contracts/Offer.sol#L298


 - [ ] ID-294
Constant [ReentrancyGuardUpgradeable.ReentrancyGuardStorageLocation](node_modules/@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol#L47) is not in UPPER_CASE_WITH_UNDERSCORES

node_modules/@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol#L47


 - [ ] ID-295
Parameter [Trade.getTrade(uint256)._tradeId](contracts/Trade.sol#L625) is not in mixedCase

contracts/Trade.sol#L625


 - [ ] ID-296
Parameter [Profile.initialize(address)._hub](contracts/Profile.sol#L83) is not in mixedCase

contracts/Profile.sol#L83


 - [ ] ID-297
Parameter [Offer.updateOfferState(uint256,IOffer.OfferState)._newState](contracts/Offer.sol#L384) is not in mixedCase

contracts/Offer.sol#L384


 - [ ] ID-298
Parameter [ArbitratorManager.removeArbitratorFromCurrency(address,string)._arbitrator](contracts/ArbitratorManager.sol#L122) is not in mixedCase

contracts/ArbitratorManager.sol#L122


 - [ ] ID-299
Parameter [Offer.createOffer(IOffer.OfferType,string,address,uint256,uint256,uint256,string)._maxAmount](contracts/Offer.sol#L100) is not in mixedCase

contracts/Offer.sol#L100


 - [ ] ID-300
Parameter [ArbitratorManager.updateArbitratorReputation(address,bool)._won](contracts/ArbitratorManager.sol#L360) is not in mixedCase

contracts/ArbitratorManager.sol#L360


 - [ ] ID-301
Parameter [Trade.submitEvidence(uint256,string)._evidence](contracts/Trade.sol#L521) is not in mixedCase

contracts/Trade.sol#L521


 - [ ] ID-302
Parameter [PriceOracle.registerPriceRoute(address,address[],uint24[],address,uint32)._token](contracts/PriceOracle.sol#L188) is not in mixedCase

contracts/PriceOracle.sol#L188


 - [ ] ID-303
Parameter [Offer.getOffersByType(IOffer.OfferType,string,address,uint256,uint256)._limit](contracts/Offer.sol#L299) is not in mixedCase

contracts/Offer.sol#L299


 - [ ] ID-304
Parameter [Profile.updateAdmin(address)._newAdmin](contracts/Profile.sol#L326) is not in mixedCase

contracts/Profile.sol#L326


 - [ ] ID-305
Parameter [Trade.submitEvidence(uint256,string)._tradeId](contracts/Trade.sol#L521) is not in mixedCase

contracts/Trade.sol#L521


 - [ ] ID-306
Function [ContextUpgradeable.__Context_init()](node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol#L18-L19) is not in mixedCase

node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol#L18-L19


 - [ ] ID-307
Parameter [PriceOracle.isCircuitBreakerActive(address)._token](contracts/PriceOracle.sol#L617) is not in mixedCase

contracts/PriceOracle.sol#L617


 - [ ] ID-308
Parameter [Offer.getUserOffers(address,uint256,uint256)._offset](contracts/Offer.sol#L334) is not in mixedCase

contracts/Offer.sol#L334


 - [ ] ID-309
Parameter [Offer.activateOffer(uint256)._offerId](contracts/Offer.sol#L253) is not in mixedCase

contracts/Offer.sol#L253


 - [ ] ID-310
Parameter [Hub.batchUnpauseOperations(bytes32[])._operations](contracts/Hub.sol#L286) is not in mixedCase

contracts/Hub.sol#L286


 - [ ] ID-311
Parameter [PriceOracle.getFiatPrice(string)._currency](contracts/PriceOracle.sol#L298) is not in mixedCase

contracts/PriceOracle.sol#L298


 - [ ] ID-312
Function [ERC165Upgradeable.__ERC165_init()](node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol#L22-L23) is not in mixedCase

node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol#L22-L23


 - [ ] ID-313
Parameter [Hub.batchPauseOperations(bytes32[])._operations](contracts/Hub.sol#L271) is not in mixedCase

contracts/Hub.sol#L271


 - [ ] ID-314
Parameter [ArbitratorManager.initialize(address,address)._tradeContract](contracts/ArbitratorManager.sol#L60) is not in mixedCase

contracts/ArbitratorManager.sol#L60


 - [ ] ID-315
Parameter [ArbitratorManager.isActiveArbitrator(address)._arbitrator](contracts/ArbitratorManager.sol#L458) is not in mixedCase

contracts/ArbitratorManager.sol#L458


 - [ ] ID-316
Parameter [Profile.getReputationScore(address)._user](contracts/Profile.sol#L274) is not in mixedCase

contracts/Profile.sol#L274


 - [ ] ID-317
Parameter [PriceOracle.updateChainlinkFeed(string,address,uint8,uint256)._currency](contracts/PriceOracle.sol#L220) is not in mixedCase

contracts/PriceOracle.sol#L220


 - [ ] ID-318
Parameter [PriceOracle.registerPriceRoute(address,address[],uint24[],address,uint32)._fees](contracts/PriceOracle.sol#L190) is not in mixedCase

contracts/PriceOracle.sol#L190


## too-many-digits
Impact: Informational
Confidence: Medium
 - [ ] ID-319
[Math.log2(uint256)](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L612-L651) uses literals with too many digits:
	- [r = r | byte(uint256,uint256)(x >> r,0x0000010102020202030303030303030300000000000000000000000000000000)](node_modules/@openzeppelin/contracts/utils/math/Math.sol#L649)

node_modules/@openzeppelin/contracts/utils/math/Math.sol#L612-L651


 - [ ] ID-320
[ArbitratorManager.configureVRF(address,uint64,bytes32,uint32,uint16)](contracts/ArbitratorManager.sol#L390-L408) uses literals with too many digits:
	- [require(bool,string)(_callbackGasLimit >= 100000,Gas limit too low)](contracts/ArbitratorManager.sol#L398)

contracts/ArbitratorManager.sol#L390-L408


## unused-state
Impact: Informational
Confidence: High
 - [ ] ID-321
[ArbitratorManager.__gap](contracts/ArbitratorManager.sol#L46) is never used in [ArbitratorManager](contracts/ArbitratorManager.sol#L18-L544)

contracts/ArbitratorManager.sol#L46


 - [ ] ID-322
[Profile.__gap](contracts/Profile.sol#L36) is never used in [Profile](contracts/Profile.sol#L16-L354)

contracts/Profile.sol#L36


 - [ ] ID-323
[Hub.__gap](contracts/Hub.sol#L57) is never used in [Hub](contracts/Hub.sol#L17-L536)

contracts/Hub.sol#L57


 - [ ] ID-324
[Trade.__gap](contracts/Trade.sol#L40) is never used in [Trade](contracts/Trade.sol#L22-L684)

contracts/Trade.sol#L40


 - [ ] ID-325
[PriceOracle.__gap](contracts/PriceOracle.sol#L78) is never used in [PriceOracle](contracts/PriceOracle.sol#L19-L659)

contracts/PriceOracle.sol#L78


 - [ ] ID-326
[Escrow.__gap](contracts/Escrow.sol#L61) is never used in [Escrow](contracts/Escrow.sol#L22-L520)

contracts/Escrow.sol#L61


## immutable-states
Impact: Optimization
Confidence: High
 - [ ] ID-327
[MockERC20._decimals](contracts/MockERC20.sol#L12) should be immutable 

contracts/MockERC20.sol#L12


